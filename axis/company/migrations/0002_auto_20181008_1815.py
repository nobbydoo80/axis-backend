# Generated by Django 1.11.16 on 2018-10-08 18:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("company", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0008_alter_user_username_max_length"),
        ("geocoder", "0002_auto_20181008_1815"),
        ("relationship", "0001_initial"),
        ("geographic", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="utilitysettings",
            name="relationship",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="relationship.Relationship"
            ),
        ),
        migrations.AddField(
            model_name="sponsorpreferences",
            name="sponsor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sponsored_preferences",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="sponsorpreferences",
            name="sponsored_company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sponsor_preferences",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalutilityorganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalraterorganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalqaorganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalproviderorganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalhvacorganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalgeneralorganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicaleeporganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompanydocument",
            name="company",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompanydocument",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalcompanydocument",
            name="shared_company",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompany",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompany",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompany",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompany",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompany",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalcompany",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalcompany",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.City",
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="company_ptr",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="group",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="historicalbuilderorganization",
            name="place",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="historicalaltname",
            name="company",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="historicalaltname",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="contactremoteidentifier",
            name="contact",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="identifiers",
                to="company.Contact",
            ),
        ),
        migrations.AddField(
            model_name="contact_special",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="company.Company"
            ),
        ),
        migrations.AddField(
            model_name="contact_special",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="city",
            field=models.ForeignKey(
                blank=True,
                help_text='Type the first few letters of the name of the city the home is located in and select the correct city/state/county combination from the list presented. If the correct city is not available, click "Add New" to add a city to the database.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geographic.City",
                verbose_name="City/State",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="company.Company"
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                help_text="The response this place was constructed from.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="metro",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geographic.Metro",
                verbose_name="Metro",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="place",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="contact_set",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="companydocument",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="company_document",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="companydocument",
            name="shared_company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shared_document",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="city",
            field=models.ForeignKey(
                blank=True,
                help_text='Type the first few letters of the name of the city the home is located in and select the correct city/state/county combination from the list presented. If the correct city is not available, click "Add New" to add a city to the database.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geographic.City",
                verbose_name="City/State",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="climate_zone",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geographic.ClimateZone",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="counties",
            field=models.ManyToManyField(
                help_text='Click on a county from the box below to add it to the list of Counties of Operation for this company represented in the box to the below-right.  To remove counties from the list of Counties of Operation, click on a county in the box to the below-right.  Click on "Submit" when finished.',
                related_name="companies",
                to="geographic.County",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                help_text="The response this place was constructed from.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geocoder.GeocodeResponse",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="group",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="company_company_related",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="metro",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geographic.Metro",
                verbose_name="Metro",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="place",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="company_set",
                to="geographic.Place",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="sponsors",
            field=models.ManyToManyField(
                blank=True,
                related_name="sponsored_companies",
                through="company.SponsorPreferences",
                to="company.Company",
            ),
        ),
        migrations.AddField(
            model_name="altname",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="company.Company"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="contactremoteidentifier",
            unique_together=set([("type", "contact")]),
        ),
        migrations.AlterUniqueTogether(
            name="company",
            unique_together=set([("name", "city", "state", "company_type")]),
        ),
    ]
