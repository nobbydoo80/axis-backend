# Generated by Django 1.11.16 on 2018-10-08 18:15

import django.db.models.deletion
import localflavor.us.models
import phonenumber_field.modelfields
import simple_history.models
from django.db import migrations, models

import axis.company.models
import axis.company.validators
import axis.core.fields
import axis.geographic.placedmodels


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AltName",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='If the company does business by one or more names ("Doing-Business-As" or "DBAs"), enter the alternative name of the company.  You may add additional alternative names by clicking on "Add another" below.  Click on "Submit" when finished.',
                        max_length=128,
                    ),
                ),
            ],
            options={"verbose_name": "Alternative Name"},
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
            ],
            options={"ordering": ("name",), "verbose_name_plural": "Companies"},
            bases=(axis.geographic.placedmodels.PlaceSynchronizationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CompanyDocument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("admin_only", models.BooleanField(default=False)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "document",
                    models.FileField(
                        max_length=512,
                        upload_to=axis.company.models.company_document._content_file_name,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("person", "Person"), ("company", "Company")],
                        default="person",
                        max_length=10,
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(blank=True, max_length=50)),
                ("description", models.CharField(blank=True, max_length=200)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(axis.geographic.placedmodels.PlaceSynchronizationMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Contact_SPECIAL",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactRemoteIdentifier",
            fields=[
                (
                    "type",
                    models.CharField(
                        choices=[("trc", "TRC UUID")],
                        help_text="A queryable label for an off-site type.",
                        max_length=20,
                    ),
                ),
                (
                    "id",
                    axis.core.fields.UUIDField(
                        blank=True,
                        help_text="Represents an off-site ID of the given type.",
                        max_length=64,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalAltName",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='If the company does business by one or more names ("Doing-Business-As" or "DBAs"), enter the alternative name of the company.  You may add additional alternative names by clicking on "Add another" below.  Click on "Submit" when finished.',
                        max_length=128,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Alternative Name",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBuilderOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Builder",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCompany",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical company",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCompanyDocument",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("admin_only", models.BooleanField(default=False)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.CharField(blank=True, max_length=255, null=True)),
                ("document", models.TextField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical company document",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalEepOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Program Sponsor",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalGeneralOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical general organization",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalHvacOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                (
                    "hquito_accredited",
                    models.BooleanField(
                        null=True,
                        choices=[
                            (None, "Unknown"),
                            (True, "Accredited"),
                            (False, "Not Accredited"),
                        ],
                        default=None,
                        help_text="Set the H-QUITO accredited status based on EPA or Advanced Energy",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical HVAC Company",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalProviderOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                (
                    "provider_id",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        validators=[axis.company.validators.validate_provider_id],
                        verbose_name="Provider ID",
                    ),
                ),
                (
                    "auto_submit_to_registry",
                    models.BooleanField(
                        default=False,
                        help_text="Auto Submit home to RESNET Registry upon certification.",
                    ),
                ),
                ("is_sample_eligible", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Provider",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQaOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical qa organization",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRaterOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                (
                    "certification_number",
                    models.CharField(blank=True, db_index=True, max_length=16, null=True),
                ),
                ("is_sample_eligible", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Rating Company",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalUtilityOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "street_line1",
                    models.CharField(
                        blank=True,
                        help_text="Enter the street number and street name of the home (e.g. 123 Main St).",
                        max_length=100,
                        null=True,
                        verbose_name="Street Address",
                    ),
                ),
                (
                    "street_line2",
                    models.CharField(
                        blank=True,
                        help_text="Enter the unit number (where multiple dwelling units share a common street address), or leave blank if not applicable.",
                        max_length=100,
                        null=True,
                        verbose_name="Unit number (if applicable)",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        help_text="Enter the 5-digit ZIP Code of home.",
                        max_length=15,
                        null=True,
                        verbose_name="ZIP Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Type the first few letters of the name of the company that you wish to associate with.  If the company you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the company does not exist within the database, type the full name of the company, select it in the "Create new" list, and populate the fields below.',
                        max_length=255,
                    ),
                ),
                (
                    "office_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter the main company phone number in the format XXX-XXX-XXXX.",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the company.",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "default_email",
                    models.EmailField(
                        blank=True,
                        help_text="Enter a default email address for the company.",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("builder", "Builder"),
                            ("eep", "Program Sponsor"),
                            ("provider", "Rating Provider"),
                            ("rater", "Rating Company"),
                            ("utility", "Utility Company"),
                            ("hvac", "HVAC Contractor"),
                            ("qa", "QA/QC Company"),
                            ("general", "General Company"),
                        ],
                        max_length=32,
                    ),
                ),
                ("slug", models.SlugField(verbose_name="slug")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Master Switch - This will remove them from everything",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="The allows the company to be viewed publicly."
                    ),
                ),
                (
                    "is_customer",
                    models.BooleanField(
                        default=False, help_text="If the company is a paying us they are a customer"
                    ),
                ),
                ("is_eep_sponsor", models.BooleanField(default=False)),
                (
                    "auto_add_direct_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants you to have a relationship with another object (i.e. subdivision, home, floorplan, etc) to automatically be accepted.",
                    ),
                ),
                (
                    "auto_add_direct_company_relationships",
                    models.BooleanField(
                        default=False,
                        help_text="Enabling this will allow any company that wants to have a relationship with you to be automatically accepted.",
                    ),
                ),
                (
                    "display_raw_addresses",
                    models.BooleanField(
                        default=False,
                        help_text="Set preference to view addresses as-entered rather than normalized by the geocoder.  Addresses will continue to be geocoded, but the results not displayed.",
                    ),
                ),
                ("electricity_provider", models.BooleanField(default=False)),
                ("gas_provider", models.BooleanField(default=False)),
                ("water_provider", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Utility Company",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="SponsorPreferences",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("can_edit_profile", models.BooleanField(default=True)),
                ("can_edit_identity_fields", models.BooleanField(default=True)),
                ("notify_sponsor_on_update", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ("sponsored_company__name",),
            },
        ),
        migrations.CreateModel(
            name="UtilitySettings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("is_gas_utility", models.BooleanField(default=False)),
                ("is_electric_utility", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "home_utilitysettings",
            },
        ),
        migrations.CreateModel(
            name="BuilderOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
            ],
            options={"verbose_name": "Builder"},
            bases=("company.company",),
        ),
        migrations.CreateModel(
            name="EepOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
            ],
            options={"verbose_name": "Program Sponsor"},
            bases=("company.company",),
        ),
        migrations.CreateModel(
            name="GeneralOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
            ],
            options={"verbose_name_plural": "General Companies"},
            bases=("company.company",),
        ),
        migrations.CreateModel(
            name="HvacOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
                (
                    "hquito_accredited",
                    models.BooleanField(
                        null=True,
                        choices=[
                            (None, "Unknown"),
                            (True, "Accredited"),
                            (False, "Not Accredited"),
                        ],
                        default=None,
                        help_text="Set the H-QUITO accredited status based on EPA or Advanced Energy",
                    ),
                ),
            ],
            options={
                "verbose_name": "HVAC Company",
                "verbose_name_plural": "HVAC Companies",
            },
            bases=("company.company",),
        ),
        migrations.CreateModel(
            name="ProviderOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
                (
                    "provider_id",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        validators=[axis.company.validators.validate_provider_id],
                        verbose_name="Provider ID",
                    ),
                ),
                (
                    "auto_submit_to_registry",
                    models.BooleanField(
                        default=False,
                        help_text="Auto Submit home to RESNET Registry upon certification.",
                    ),
                ),
                ("is_sample_eligible", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Provider",
            },
            bases=("company.company",),
        ),
        migrations.CreateModel(
            name="QaOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "QA/QC Companies",
            },
            bases=("company.company",),
        ),
        migrations.CreateModel(
            name="RaterOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
                (
                    "certification_number",
                    models.CharField(blank=True, max_length=16, null=True, unique=True),
                ),
                ("is_sample_eligible", models.BooleanField(default=False)),
            ],
            options={"verbose_name": "Rating Company", "verbose_name_plural": "Rating Companies"},
            bases=("company.company",),
        ),
        migrations.CreateModel(
            name="UtilityOrganization",
            fields=[
                (
                    "company_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="company.Company",
                    ),
                ),
                ("electricity_provider", models.BooleanField(default=False)),
                ("gas_provider", models.BooleanField(default=False)),
                ("water_provider", models.BooleanField(default=False)),
            ],
            options={"verbose_name": "Utility Company", "verbose_name_plural": "Utility Companies"},
            bases=("company.company",),
        ),
    ]
