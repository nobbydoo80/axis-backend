# Generated by Django 1.11.17 on 2019-05-21 22:38

import axis.core.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("company", "0003_auto_20181010_2316"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("filehandling", "0002_historicalcustomerdocument_history_change_reason_foo"),
        ("customer_hirl", "0002_auto_20181008_1815"),
    ]

    operations = [
        migrations.CreateModel(
            name="BuilderAgreement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("certification_program", models.CharField(max_length=100)),
                (
                    "state",
                    django_fsm.FSMField(
                        choices=[
                            ("new", "new"),
                            ("approved", "approved"),
                            ("signed", "signed"),
                            ("active", "active"),
                            ("retired", "retired"),
                        ],
                        default="new",
                        max_length=50,
                        protected=True,
                    ),
                ),
                ("insurance_start_date", models.DateField()),
                ("insurance_expiration_date", models.DateField()),
                ("agreement_start_date", models.DateField()),
                ("agreement_expiration_date", models.DateField()),
                ("website", models.CharField(max_length=100, verbose_name="Website")),
                (
                    "project_type",
                    models.CharField(
                        choices=[
                            ("multifamily", "Multifamily"),
                            ("land_development", "Land Development"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "use_payment_contact_in_ngbs_green_projects",
                    models.BooleanField(
                        verbose_name="Should this person be contact for payment on future NGBS Green Projects?"
                    ),
                ),
                ("mailing_address_street_line1", models.CharField(max_length=100)),
                ("mailing_address_street_line2", models.CharField(max_length=100)),
                ("mailing_address_city", models.CharField(max_length=100)),
                ("mailing_address_zipcode", models.CharField(max_length=100)),
                ("shipping_address_street_line1", models.CharField(max_length=100)),
                ("shipping_address_street_line2", models.CharField(max_length=100)),
                ("shipping_address_city", models.CharField(max_length=100)),
                ("shipping_address_zipcode", models.CharField(max_length=100)),
                ("primary_contact_name", models.CharField(max_length=100)),
                ("primary_contact_title", models.CharField(max_length=100)),
                ("primary_contact_phone_number", models.CharField(max_length=100)),
                ("primary_contact_fax_number", models.CharField(max_length=100)),
                ("primary_contact_cell_number", models.CharField(max_length=100)),
                ("primary_contact_email_address", models.CharField(max_length=100)),
                ("secondary_contact_name", models.CharField(max_length=100)),
                ("secondary_contact_title", models.CharField(max_length=100)),
                ("secondary_contact_phone_number", models.CharField(max_length=100)),
                ("secondary_contact_fax_number", models.CharField(max_length=100)),
                ("secondary_contact_cell_number", models.CharField(max_length=100)),
                ("secondary_contact_email_address", models.CharField(max_length=100)),
                ("payment_contact_name", models.CharField(max_length=100)),
                ("payment_contact_title", models.CharField(max_length=100)),
                ("payment_contact_phone_number", models.CharField(max_length=100)),
                ("payment_contact_fax_number", models.CharField(max_length=100)),
                ("payment_contact_cell_number", models.CharField(max_length=100)),
                ("payment_contact_email_address", models.CharField(max_length=100)),
                ("marketing_contact_name", models.CharField(max_length=100)),
                ("marketing_contact_title", models.CharField(max_length=100)),
                ("marketing_contact_phone_number", models.CharField(max_length=100)),
                ("marketing_contact_fax_number", models.CharField(max_length=100)),
                ("marketing_contact_cell_number", models.CharField(max_length=100)),
                ("marketing_contact_email_address", models.CharField(max_length=100)),
                ("data", axis.core.fields.AxisJSONField(default=dict)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrolled_agreements",
                        to="company.Company",
                    ),
                ),
                (
                    "executed_agreement",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="filehandling.CustomerDocument",
                    ),
                ),
                (
                    "insurance_certificate",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="filehandling.CustomerDocument",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="managed_agreements",
                        to="company.Company",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalBuilderAgreement",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("certification_program", models.CharField(max_length=100)),
                (
                    "state",
                    django_fsm.FSMField(
                        choices=[
                            ("new", "new"),
                            ("approved", "approved"),
                            ("signed", "signed"),
                            ("active", "active"),
                            ("retired", "retired"),
                        ],
                        default="new",
                        max_length=50,
                        protected=True,
                    ),
                ),
                ("insurance_start_date", models.DateField()),
                ("insurance_expiration_date", models.DateField()),
                ("agreement_start_date", models.DateField()),
                ("agreement_expiration_date", models.DateField()),
                ("website", models.CharField(max_length=100, verbose_name="Website")),
                (
                    "project_type",
                    models.CharField(
                        choices=[
                            ("multifamily", "Multifamily"),
                            ("land_development", "Land Development"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "use_payment_contact_in_ngbs_green_projects",
                    models.BooleanField(
                        verbose_name="Should this person be contact for payment on future NGBS Green Projects?"
                    ),
                ),
                ("mailing_address_street_line1", models.CharField(max_length=100)),
                ("mailing_address_street_line2", models.CharField(max_length=100)),
                ("mailing_address_city", models.CharField(max_length=100)),
                ("mailing_address_zipcode", models.CharField(max_length=100)),
                ("shipping_address_street_line1", models.CharField(max_length=100)),
                ("shipping_address_street_line2", models.CharField(max_length=100)),
                ("shipping_address_city", models.CharField(max_length=100)),
                ("shipping_address_zipcode", models.CharField(max_length=100)),
                ("primary_contact_name", models.CharField(max_length=100)),
                ("primary_contact_title", models.CharField(max_length=100)),
                ("primary_contact_phone_number", models.CharField(max_length=100)),
                ("primary_contact_fax_number", models.CharField(max_length=100)),
                ("primary_contact_cell_number", models.CharField(max_length=100)),
                ("primary_contact_email_address", models.CharField(max_length=100)),
                ("secondary_contact_name", models.CharField(max_length=100)),
                ("secondary_contact_title", models.CharField(max_length=100)),
                ("secondary_contact_phone_number", models.CharField(max_length=100)),
                ("secondary_contact_fax_number", models.CharField(max_length=100)),
                ("secondary_contact_cell_number", models.CharField(max_length=100)),
                ("secondary_contact_email_address", models.CharField(max_length=100)),
                ("payment_contact_name", models.CharField(max_length=100)),
                ("payment_contact_title", models.CharField(max_length=100)),
                ("payment_contact_phone_number", models.CharField(max_length=100)),
                ("payment_contact_fax_number", models.CharField(max_length=100)),
                ("payment_contact_cell_number", models.CharField(max_length=100)),
                ("payment_contact_email_address", models.CharField(max_length=100)),
                ("marketing_contact_name", models.CharField(max_length=100)),
                ("marketing_contact_title", models.CharField(max_length=100)),
                ("marketing_contact_phone_number", models.CharField(max_length=100)),
                ("marketing_contact_fax_number", models.CharField(max_length=100)),
                ("marketing_contact_cell_number", models.CharField(max_length=100)),
                ("marketing_contact_email_address", models.CharField(max_length=100)),
                ("data", axis.core.fields.AxisJSONField(default=dict)),
                ("date_created", models.DateTimeField(blank=True, editable=False)),
                ("date_modified", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="company.Company",
                    ),
                ),
                (
                    "executed_agreement",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="filehandling.CustomerDocument",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "insurance_certificate",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="filehandling.CustomerDocument",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="company.Company",
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical builder agreement",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
