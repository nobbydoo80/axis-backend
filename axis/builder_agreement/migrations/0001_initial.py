# Generated by Django 1.11.16 on 2018-10-08 18:15

import axis.builder_agreement.models
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BuilderAgreement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "total_lots",
                    models.IntegerField(help_text="Total number of lots this agreement covers"),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="The start date that this agreement begins.  Incentive Payments will be checked against this.",
                        null=True,
                    ),
                ),
                (
                    "expire_date",
                    models.DateField(
                        blank=True,
                        help_text="The expiration date that this agreement ends on.  Incentive Payments will be checked against this.",
                        null=True,
                    ),
                ),
                (
                    "document",
                    models.FileField(
                        help_text="The hard copy of the builder agreement.",
                        max_length=512,
                        null=True,
                        upload_to=axis.builder_agreement.models.builder_agreement_file_name,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True, help_text="Additional notes.", max_length=350, null=True
                    ),
                ),
                ("lots_paid", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="This a master switch.  Incentive Payments will be checked against this.",
                    ),
                ),
                (
                    "is_legacy",
                    models.BooleanField(
                        default=False,
                        help_text="A flag to indicate that Incentive Payment checks should not validate items.",
                    ),
                ),
            ],
            options={
                "ordering": (
                    "subdivision__name",
                    "subdivision__community__name",
                    "builder_org__name",
                ),
                "verbose_name": "Builder Agreement",
                "permissions": (("view_builderagreement", "View Builder Agreement"),),
            },
        ),
        migrations.CreateModel(
            name="BuilderAgreementDocument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "document",
                    models.FileField(
                        max_length=512,
                        upload_to=axis.builder_agreement.models.builder_agreement_file_name,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalBuilderAgreement",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "total_lots",
                    models.IntegerField(help_text="Total number of lots this agreement covers"),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="The start date that this agreement begins.  Incentive Payments will be checked against this.",
                        null=True,
                    ),
                ),
                (
                    "expire_date",
                    models.DateField(
                        blank=True,
                        help_text="The expiration date that this agreement ends on.  Incentive Payments will be checked against this.",
                        null=True,
                    ),
                ),
                (
                    "document",
                    models.TextField(
                        help_text="The hard copy of the builder agreement.",
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True, help_text="Additional notes.", max_length=350, null=True
                    ),
                ),
                ("lots_paid", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, editable=False)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="This a master switch.  Incentive Payments will be checked against this.",
                    ),
                ),
                (
                    "is_legacy",
                    models.BooleanField(
                        default=False,
                        help_text="A flag to indicate that Incentive Payment checks should not validate items.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Builder Agreement",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBuilderAgreementDocument",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255, null=True)),
                ("document", models.TextField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
                (
                    "builder_agreement",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="builder_agreement.BuilderAgreement",
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical builder agreement document",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
