# Generated by Django 1.11.16 on 2018-10-08 18:15

import django.db.models.deletion
import localflavor.us.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("geocoder", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("place_fips", models.CharField(max_length=12, unique=True)),
                (
                    "legal_statistical_area_description",
                    models.CharField(max_length=64, unique=True),
                ),
                ("ansi_code", models.CharField(max_length=16)),
                ("land_area_meters", models.BigIntegerField()),
                ("water_area_meters", models.BigIntegerField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
            ],
            options={
                "ordering": ["county__state", "county", "name"],
                "verbose_name_plural": "US Cities/Towns",
                "verbose_name": "US City/Town",
            },
        ),
        migrations.CreateModel(
            name="ClimateZone",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("zone", models.IntegerField()),
                (
                    "moisture_regime",
                    models.CharField(
                        blank=True,
                        choices=[("B", "Dry"), ("A", "Moist"), ("C", "Marine")],
                        max_length=2,
                        null=True,
                    ),
                ),
                ("doe_zone", models.CharField(max_length=32, unique=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "DOE Climate Zone",
                "verbose_name_plural": "DOE Climate Zones",
            },
        ),
        migrations.CreateModel(
            name="County",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        max_length=2,
                    ),
                ),
                ("county_fips", models.CharField(max_length=12, unique=True)),
                (
                    "county_type",
                    models.CharField(
                        choices=[
                            ("1", "County"),
                            ("2", "Parish"),
                            ("3", "City"),
                            ("4", "Borough"),
                            ("5", "Municipality"),
                            ("6", "Municipio"),
                            ("7", "Census Area"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                ("legal_statistical_area_description", models.CharField(max_length=64)),
                ("ansi_code", models.CharField(max_length=16, unique=True)),
                ("land_area_meters", models.BigIntegerField()),
                ("water_area_meters", models.BigIntegerField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                (
                    "climate_zone",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geographic.ClimateZone",
                    ),
                ),
            ],
            options={
                "ordering": ["state", "name"],
                "verbose_name_plural": "US Counties",
                "verbose_name": "US County",
            },
        ),
        migrations.CreateModel(
            name="Metro",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("cbsa_code", models.CharField(max_length=6, unique=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Metropolitan Area",
                "verbose_name_plural": "Metropolitan Areas",
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("lot_number", models.CharField(blank=True, max_length=16, null=True)),
                ("street_line1", models.CharField(blank=True, max_length=100, null=True)),
                ("street_line2", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "zipcode",
                    models.CharField(blank=True, max_length=15, null=True, verbose_name="ZIP Code"),
                ),
                (
                    "cross_roads",
                    models.CharField(
                        blank=True,
                        help_text="The street intersection or crossroads where this parcel of land resides.",
                        max_length=128,
                    ),
                ),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "is_multi_family",
                    models.BooleanField(
                        default=False,
                        help_text="This denotes a multi-family project, such as an apartment or condo",
                        verbose_name="Multi-family",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                ("address_override", models.BooleanField(default=False)),
                ("created_date", models.DateTimeField(editable=False)),
                ("modified_date", models.DateTimeField(auto_now=True)),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        help_text="The city where this parcel of land resides",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="place_set",
                        to="geographic.City",
                    ),
                ),
                (
                    "climate_zone",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geographic.ClimateZone",
                    ),
                ),
                (
                    "county",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geographic.County",
                    ),
                ),
                (
                    "geocode_response",
                    models.ForeignKey(
                        blank=True,
                        help_text="The response this place was constructed from.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="place_set",
                        to="geocoder.GeocodeResponse",
                    ),
                ),
                (
                    "metro",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geographic.Metro",
                    ),
                ),
            ],
            options={"verbose_name": "Place"},
        ),
        migrations.AddField(
            model_name="county",
            name="metro",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="geographic.Metro",
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="county",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="geographic.County"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="county",
            unique_together=set([("legal_statistical_area_description", "state")]),
        ),
        migrations.AlterUniqueTogether(
            name="city",
            unique_together=set([("legal_statistical_area_description", "county")]),
        ),
    ]
