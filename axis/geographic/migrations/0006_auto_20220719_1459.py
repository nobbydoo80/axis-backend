# Generated by Django 3.2.14 on 2022-07-19 14:59

from django.db import migrations, models
import django.db.models.deletion


def add_countries(apps, schema_editor):
    import pytz

    Country = apps.get_model("geographic", "Country")
    Country.objects.bulk_create(
        [
            Country(
                **{
                    "abbr": abbr,
                    "name": name,
                }
            )
            for abbr, name in pytz.country_names.items()
        ]
    )


def update_countries(apps, schema_editor):
    from ..utils.country import resolve_country

    usa = resolve_country("US")
    pr = resolve_country("PR")
    vi = resolve_country("VI")

    ModelObj = apps.get_model("geographic", "City")
    ModelObj.objects.exclude(county__state__in=["PR", "VI"]).update(country=usa)
    ModelObj.objects.filter(county__state__in=["PR"]).update(country=pr, county=None)
    ModelObj.objects.filter(county__state__in=["VI"]).update(country=vi, county=None)


class Migration(migrations.Migration):
    dependencies = [
        ("geocoder", "0013_auto_20211021_1933"),
        ("geographic", "0005_auto_20211021_1932"),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("abbr", models.CharField(db_index=True, max_length=2, unique=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "ordering": ["abbr"],
            },
        ),
        migrations.RunPython(add_countries),
        migrations.AlterModelOptions(
            name="city",
            options={"verbose_name": "City/Town", "verbose_name_plural": "Cities/Towns"},
        ),
        migrations.AddField(
            model_name="city",
            name="geocode_response",
            field=models.ForeignKey(
                blank=True,
                help_text="Selected by user in case of multiple valid results, automatically when we have one result and empty when geocode do not have valid results or the user wants to use his own response",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geocoder.geocoderesponse",
            ),
        ),
        migrations.AlterField(
            model_name="city",
            name="county",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="geographic.county"
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="country",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="geographic.country"
            ),
        ),
        migrations.RunPython(update_countries),
        migrations.AlterField(
            model_name="city",
            name="country",
            field=models.ForeignKey(
                null=False, on_delete=django.db.models.deletion.CASCADE, to="geographic.country"
            ),
        ),
        migrations.AlterModelOptions(
            name="city",
            options={
                "ordering": ["country", "county__state", "county", "name"],
                "verbose_name": "City/Town",
                "verbose_name_plural": "Cities/Towns",
            },
        ),
    ]
