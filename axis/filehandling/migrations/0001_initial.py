# Generated by Django 1.11.16 on 2018-10-08 18:15

import axis.filehandling.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import picklefield.fields
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("company", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AsynchronousProcessedDocument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "document",
                    models.FileField(
                        help_text='Click on "Select file" and select a file from the file browser.  Once selected, click on "Change" to select a new file or "Remove" to delete the file.  Note that bulk checklist upload templates are program-specific.  You may download a bulk checklist template file from the "Misc" tab on the program detail page.',
                        max_length=512,
                        upload_to=axis.filehandling.models.uploaded_file_name,
                    ),
                ),
                ("task_name", models.CharField(blank=True, max_length=128, null=True)),
                ("task_id", models.CharField(blank=True, max_length=36, null=True)),
                (
                    "final_status",
                    models.CharField(
                        choices=[
                            (b"FAILURE", b"FAILURE"),
                            (b"PENDING", b"PENDING"),
                            (b"RECEIVED", b"RECEIVED"),
                            (b"RETRY", b"RETRY"),
                            (b"REVOKED", b"REVOKED"),
                            (b"STARTED", b"STARTED"),
                            (b"SUCCESS", b"SUCCESS"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "result",
                    picklefield.fields.PickledObjectField(default=None, editable=False, null=True),
                ),
                ("download", models.BooleanField(default=False)),
                ("created_date", models.DateTimeField(editable=False)),
                ("modified_date", models.DateTimeField()),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.Company"
                    ),
                ),
            ],
            options={
                "verbose_name": "Processed Document",
            },
        ),
        migrations.CreateModel(
            name="CustomerDocument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "document",
                    models.FileField(
                        max_length=512, upload_to=axis.filehandling.models.content_name
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("document", "Document"), ("image", "Image"), ("", "Other")],
                        max_length=15,
                    ),
                ),
                ("filesize", models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("object_id", models.PositiveIntegerField()),
                ("is_active", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "created_on",
                    models.DateTimeField(default=django.utils.timezone.now, editable=False),
                ),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="all_customer_documents",
                        to="company.Company",
                        verbose_name="Sharing company",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="contenttypes.ContentType"
                    ),
                ),
            ],
            options={"verbose_name": "Customer Document"},
        ),
        migrations.CreateModel(
            name="HistoricalCustomerDocument",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("document", models.TextField(max_length=512)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("document", "Document"), ("image", "Image"), ("", "Other")],
                        max_length=15,
                    ),
                ),
                ("filesize", models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("object_id", models.PositiveIntegerField()),
                ("is_active", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "created_on",
                    models.DateTimeField(default=django.utils.timezone.now, editable=False),
                ),
                ("last_update", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="company.Company",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Customer Document",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="UploadFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to=axis.filehandling.models.filepath
                    ),
                ),
            ],
        ),
    ]
