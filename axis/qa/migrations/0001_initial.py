# Generated by Django 1.11.16 on 2018-10-08 18:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_states.fields
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("company", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("home", "0001_initial"),
        ("eep_program", "0001_initial"),
        ("subdivision", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalQANote",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("note", models.TextField(max_length=1200)),
                ("object_id", models.PositiveIntegerField()),
                ("created_on", models.DateTimeField(editable=False)),
                ("last_update", models.DateTimeField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical QA Note",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQARequirement",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "coverage_pct",
                    models.FloatField(
                        default=0.2,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("gate_certification", models.BooleanField(default=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("file", "File"),
                            ("field", "Field"),
                            ("program_review", "Program Review"),
                        ],
                        max_length=14,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
                (
                    "eep_program",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="eep_program.EEPProgram",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "qa_company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="company.Company",
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical QA Requirement",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQAStatus",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        blank=True,
                        choices=[("pass", "Pass"), ("fail", "Fail")],
                        max_length=8,
                        null=True,
                    ),
                ),
                ("has_observations", models.BooleanField(default=False)),
                ("has_failed", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(editable=False)),
                ("last_update", models.DateTimeField(editable=False)),
                (
                    "state",
                    django_states.fields.StateField(
                        default=b"received", max_length=100, verbose_name="state id"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "home_status",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="home.EEPProgramHomeStatus",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="company.Company",
                    ),
                ),
                (
                    "qa_designee",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical QA Status",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQAStatusStateLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "state",
                    django_states.fields.StateField(
                        default=b"transition_initiated", max_length=100, verbose_name="state id"
                    ),
                ),
                (
                    "from_state",
                    models.CharField(
                        choices=[
                            (b"received", "Received"),
                            (b"in_progress", "In Progress"),
                            (b"correction_required", "Correction Required"),
                            (b"complete", "Complete"),
                            (b"correction_received", "Correction Received"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "to_state",
                    models.CharField(
                        choices=[
                            (b"received", "Received"),
                            (b"in_progress", "In Progress"),
                            (b"correction_required", "Correction Required"),
                            (b"complete", "Complete"),
                            (b"correction_received", "Correction Received"),
                        ],
                        max_length=100,
                    ),
                ),
                ("serialized_kwargs", models.TextField(blank=True)),
                (
                    "start_time",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="transition started at"
                    ),
                ),
                (
                    "on",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="state_history",
                        to="qa.HistoricalQAStatus",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical QA Status transition",
            },
        ),
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(default=django.utils.timezone.now, editable=False),
                ),
                ("last_update", models.DateTimeField(editable=False)),
            ],
        ),
        migrations.CreateModel(
            name="ObservationType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "created_on",
                    models.DateTimeField(default=django.utils.timezone.now, editable=False),
                ),
                ("last_update", models.DateTimeField(editable=False)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.Company"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QANote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("note", models.TextField(max_length=1200)),
                ("object_id", models.PositiveIntegerField()),
                ("created_on", models.DateTimeField(editable=False)),
                ("last_update", models.DateTimeField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="contenttypes.ContentType"
                    ),
                ),
            ],
            options={"verbose_name": "QA Note", "verbose_name_plural": "QA Notes"},
        ),
        migrations.CreateModel(
            name="QARequirement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "coverage_pct",
                    models.FloatField(
                        default=0.2,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("gate_certification", models.BooleanField(default=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("file", "File"),
                            ("field", "Field"),
                            ("program_review", "Program Review"),
                        ],
                        max_length=14,
                    ),
                ),
                (
                    "eep_program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="eep_program.EEPProgram"
                    ),
                ),
                (
                    "qa_company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.Company"
                    ),
                ),
                (
                    "required_companies",
                    models.ManyToManyField(
                        blank=True, related_name="enabled_qa_requirements", to="company.Company"
                    ),
                ),
            ],
            options={"verbose_name": "QA Requirement", "verbose_name_plural": "QA Requirements"},
        ),
        migrations.CreateModel(
            name="QAStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        blank=True,
                        choices=[("pass", "Pass"), ("fail", "Fail")],
                        max_length=8,
                        null=True,
                    ),
                ),
                ("has_observations", models.BooleanField(default=False)),
                ("has_failed", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(editable=False)),
                ("last_update", models.DateTimeField(editable=False)),
                (
                    "state",
                    django_states.fields.StateField(
                        default=b"received", max_length=100, verbose_name="state id"
                    ),
                ),
                (
                    "correction_types",
                    models.ManyToManyField(through="qa.Observation", to="qa.ObservationType"),
                ),
                (
                    "home_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.EEPProgramHomeStatus",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.Company"
                    ),
                ),
                (
                    "qa_designee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requirement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.QARequirement",
                    ),
                ),
                (
                    "subdivision",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="subdivision.Subdivision",
                    ),
                ),
            ],
            options={"verbose_name": "QA Status", "verbose_name_plural": "QA Statuses"},
        ),
        migrations.CreateModel(
            name="QAStatusStateLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "state",
                    django_states.fields.StateField(
                        default=b"transition_initiated", max_length=100, verbose_name="state id"
                    ),
                ),
                (
                    "from_state",
                    models.CharField(
                        choices=[
                            (b"received", "Received"),
                            (b"in_progress", "In Progress"),
                            (b"correction_required", "Correction Required"),
                            (b"complete", "Complete"),
                            (b"correction_received", "Correction Received"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "to_state",
                    models.CharField(
                        choices=[
                            (b"received", "Received"),
                            (b"in_progress", "In Progress"),
                            (b"correction_required", "Correction Required"),
                            (b"complete", "Complete"),
                            (b"correction_received", "Correction Received"),
                        ],
                        max_length=100,
                    ),
                ),
                ("serialized_kwargs", models.TextField(blank=True)),
                (
                    "start_time",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="transition started at"
                    ),
                ),
                (
                    "on",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="state_history",
                        to="qa.QAStatus",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "QA Status transition",
            },
        ),
        migrations.AddField(
            model_name="qanote",
            name="qa_status",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="qa.QAStatus"),
        ),
        migrations.AddField(
            model_name="qanote",
            name="user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="observation_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="qa.ObservationType"
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="qa_note",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="qa.QANote"),
        ),
        migrations.AddField(
            model_name="observation",
            name="qa_status",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="qa.QAStatus"),
        ),
        migrations.AddField(
            model_name="observation",
            name="user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalqastatus",
            name="requirement",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="qa.QARequirement",
            ),
        ),
        migrations.AddField(
            model_name="historicalqastatus",
            name="subdivision",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="subdivision.Subdivision",
            ),
        ),
        migrations.AddField(
            model_name="historicalqanote",
            name="qa_status",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="qa.QAStatus",
            ),
        ),
        migrations.AddField(
            model_name="historicalqanote",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="qastatus",
            unique_together=set([("home_status", "subdivision", "requirement")]),
        ),
    ]
