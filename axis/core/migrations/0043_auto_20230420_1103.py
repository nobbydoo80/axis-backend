# Generated by Django 4.2 on 2023-04-20 11:03

from django.db import migrations, transaction


@transaction.atomic
def populate_companies(apps, schema_editor):
    print("Populate Company Access")
    user_class = apps.get_model("core", "User")
    company_class = apps.get_model("company", "Company")
    company_access_class = apps.get_model("company", "CompanyAccess")
    company_role_class = apps.get_model("company", "CompanyRole")

    users = user_class.objects.all().exclude(companies__isnull=False).exclude(company=None)

    is_company_admin_role, created = company_role_class.objects.get_or_create(
        slug="is_company_admin", defaults={"name": "Is Company Admin"}
    )
    for user in users:
        roles = []
        if user.is_company_admin:
            roles = [
                is_company_admin_role,
            ]
        company_access, created = company_access_class.objects.update_or_create(
            user=user, company=user.company
        )
        company_access.roles.set(roles)


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0042_remove_historicaluser_company"),
    ]

    operations = [
        migrations.RunPython(populate_companies),
    ]
