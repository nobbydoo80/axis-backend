(function(window,document,$,angular){"use strict";angular.module("datatables.directive",["datatables.instances","datatables.renderer","datatables.options","datatables.util"]).directive("datatable",dataTable);function dataTable($q,$http,DTRendererFactory,DTRendererService,DTPropertyUtil){compileDirective.$inject=["tElm"];ControllerDirective.$inject=["$scope"];return{restrict:"A",scope:{dtOptions:"=",dtColumns:"=",dtColumnDefs:"=",datatable:"@"},compile:compileDirective,controller:ControllerDirective};function compileDirective(tElm){var _staticHTML=tElm[0].innerHTML;return function postLink($scope,$elem,iAttrs,ctrl){function handleChanges(newVal,oldVal){if(newVal!==oldVal){ctrl.render($elem,ctrl.buildOptionsPromise(),_staticHTML)}}var watchFunction=iAttrs.dtDisableDeepWatchers?"$watchCollection":"$watch";angular.forEach(["dtColumns","dtColumnDefs","dtOptions"],function(tableDefField){$scope[watchFunction].call($scope,tableDefField,handleChanges,true)});DTRendererService.showLoading($elem);ctrl.render($elem,ctrl.buildOptionsPromise(),_staticHTML)}}function ControllerDirective($scope){var _dtInstance;var vm=this;vm.buildOptionsPromise=buildOptionsPromise;vm.render=render;function buildOptionsPromise(){var defer=$q.defer();$q.all([$q.when($scope.dtOptions),$q.when($scope.dtColumns),$q.when($scope.dtColumnDefs)]).then(function(results){var dtOptions=results[0],dtColumns=results[1],dtColumnDefs=results[2];DTPropertyUtil.deleteProperty(dtOptions,"$promise");DTPropertyUtil.deleteProperty(dtColumns,"$promise");DTPropertyUtil.deleteProperty(dtColumnDefs,"$promise");var options;if(angular.isDefined(dtOptions)){options={};angular.extend(options,dtOptions);if(angular.isArray(dtColumns)){options.aoColumns=dtColumns}if(angular.isArray(dtColumnDefs)){options.aoColumnDefs=dtColumnDefs}if(options.language&&options.language.url){var languageDefer=$q.defer();$http.get(options.language.url).success(function(language){languageDefer.resolve(language)});options.language=languageDefer.promise}}return DTPropertyUtil.resolveObjectPromises(options,["data","aaData","fnPromise"])}).then(function(options){defer.resolve(options)});return defer.promise}function render($elem,optionsPromise,staticHTML){optionsPromise.then(function(options){DTRendererService.preRender(options);var isNgDisplay=$scope.datatable&&$scope.datatable==="ng";if(_dtInstance&&_dtInstance._renderer){_dtInstance._renderer.withOptions(options).render($elem,$scope,staticHTML).then(function(dtInstance){_dtInstance=dtInstance})}else{DTRendererFactory.fromOptions(options,isNgDisplay).render($elem,$scope,staticHTML).then(function(dtInstance){_dtInstance=dtInstance})}})}}}dataTable.$inject=["$q","$http","DTRendererFactory","DTRendererService","DTPropertyUtil"];"use strict";angular.module("datatables.factory",[]).factory("DTOptionsBuilder",dtOptionsBuilder).factory("DTColumnBuilder",dtColumnBuilder).factory("DTColumnDefBuilder",dtColumnDefBuilder).factory("DTLoadingTemplate",dtLoadingTemplate);function dtOptionsBuilder(){var DTOptions={hasOverrideDom:false,withOption:function(key,value){if(angular.isString(key)){this[key]=value}return this},withSource:function(ajax){this.ajax=ajax;return this},withDataProp:function(sAjaxDataProp){this.sAjaxDataProp=sAjaxDataProp;return this},withFnServerData:function(fn){if(!angular.isFunction(fn)){throw new Error("The parameter must be a function")}this.fnServerData=fn;return this},withPaginationType:function(sPaginationType){if(angular.isString(sPaginationType)){this.sPaginationType=sPaginationType}else{throw new Error("The pagination type must be provided")}return this},withLanguage:function(language){this.language=language;return this},withLanguageSource:function(languageSource){return this.withLanguage({url:languageSource})},withDisplayLength:function(iDisplayLength){this.iDisplayLength=iDisplayLength;return this},withFnPromise:function(fnPromise){this.fnPromise=fnPromise;return this},withDOM:function(dom){this.dom=dom;return this}};return{newOptions:function(){return Object.create(DTOptions)},fromSource:function(ajax){var options=Object.create(DTOptions);options.ajax=ajax;return options},fromFnPromise:function(fnPromise){var options=Object.create(DTOptions);options.fnPromise=fnPromise;return options}}}function dtColumnBuilder(){var DTColumn={withOption:function(key,value){if(angular.isString(key)){this[key]=value}return this},withTitle:function(sTitle){this.sTitle=sTitle;return this},withClass:function(sClass){this.sClass=sClass;return this},notVisible:function(){this.bVisible=false;return this},notSortable:function(){this.bSortable=false;return this},renderWith:function(mRender){this.mRender=mRender;return this}};return{newColumn:function(mData,sTitle){if(angular.isUndefined(mData)){throw new Error('The parameter "mData" is not defined!')}var column=Object.create(DTColumn);column.mData=mData;column.sTitle=sTitle||"";return column},DTColumn:DTColumn}}function dtColumnDefBuilder(DTColumnBuilder){return{newColumnDef:function(targets){if(angular.isUndefined(targets)){throw new Error('The parameter "targets" must be defined! See https://datatables.net/reference/option/columnDefs.targets')}var column=Object.create(DTColumnBuilder.DTColumn);if(angular.isArray(targets)){column.aTargets=targets}else{column.aTargets=[targets]}return column}}}dtColumnDefBuilder.$inject=["DTColumnBuilder"];function dtLoadingTemplate(){return{html:'<h3 class="dt-loading">Loading...</h3>'}}"use strict";angular.module("datatables.instances",[]).factory("DTInstances",dtInstances).factory("DTInstanceFactory",dtInstanceFactory);function dtInstances($q){var _instances={};var _deferLastDTInstance=$q.defer();var _lastDTInstance=null;var _deferDTInstances=$q.defer();return{register:register,getLast:getLast,getList:getList};function register(dtInstance,result){dtInstance.id=result.id;dtInstance.DataTable=result.DataTable;dtInstance.dataTable=result.dataTable;_instances[dtInstance.id]=dtInstance;_lastDTInstance=dtInstance;_deferDTInstances.resolve(_instances);_deferLastDTInstance.resolve(_lastDTInstance);_deferDTInstances=$q.defer();_deferLastDTInstance=$q.defer();_deferDTInstances.resolve(_instances);_deferLastDTInstance.resolve(_lastDTInstance);return dtInstance}function getLast(){var defer=$q.defer();_deferLastDTInstance.promise.then(function(lastInstance){defer.resolve(lastInstance)});return defer.promise}function getList(){var defer=$q.defer();_deferDTInstances.promise.then(function(instances){defer.resolve(instances)});return defer.promise}}dtInstances.$inject=["$q"];function dtInstanceFactory(){var DTInstance={reloadData:reloadData,changeData:changeData,rerender:rerender};return{newDTInstance:newDTInstance};function newDTInstance(renderer){var dtInstance=Object.create(DTInstance);dtInstance._renderer=renderer;return dtInstance}function reloadData(){this._renderer.reloadData()}function changeData(data){this._renderer.changeData(data)}function rerender(){this._renderer.rerender()}}"use strict";angular.module("datatables",["datatables.directive","datatables.factory"]).run(initAngularDataTables);function initAngularDataTables($log){if($.fn.DataTable.Api){$.fn.DataTable.Api.register("ngDestroy()",function(remove){remove=remove||false;return this.iterator("table",function(settings){var orig=settings.nTableWrapper.parentNode;var classes=settings.oClasses;var table=settings.nTable;var tbody=settings.nTBody;var thead=settings.nTHead;var tfoot=settings.nTFoot;var jqTable=$(table);var jqTbody=$(tbody);var jqWrapper=$(settings.nTableWrapper);var rows=$.map(settings.aoData,function(r){return r.nTr});var ien;settings.bDestroying=true;$.fn.DataTable.ext.internal._fnCallbackFire(settings,"aoDestroyCallback","destroy",[settings]);if(!remove){new $.fn.DataTable.Api(settings).columns().visible(true)}jqWrapper.unbind(".DT").find(":not(tbody *)").unbind(".DT");$(window).unbind(".DT-"+settings.sInstance);if(table!==thead.parentNode){jqTable.children("thead").detach();jqTable.append(thead)}if(tfoot&&table!==tfoot.parentNode){jqTable.children("tfoot").detach();jqTable.append(tfoot)}jqTable.detach();jqWrapper.detach();settings.aaSorting=[];settings.aaSortingFixed=[];$.fn.DataTable.ext.internal._fnSortingClasses(settings);$(rows).removeClass(settings.asStripeClasses.join(" "));$("th, td",thead).removeClass(classes.sSortable+" "+classes.sSortableAsc+" "+classes.sSortableDesc+" "+classes.sSortableNone);if(settings.bJUI){$("th span."+classes.sSortIcon+", td span."+classes.sSortIcon,thead).detach();$("th, td",thead).each(function(){var wrapper=$("div."+classes.sSortJUIWrapper,this);$(this).append(wrapper.contents());wrapper.detach()})}if(!remove&&orig){try{orig.insertBefore(table,settings.nTableReinsertBefore)}catch(ex){$log.warn(ex);orig.appendChild(table)}}jqTable.css("width",settings.sDestroyWidth).removeClass(classes.sTable);ien=settings.asDestroyStripes.length;if(ien){jqTbody.children().each(function(i){$(this).addClass(settings.asDestroyStripes[i%ien])})}var idx=$.inArray(settings,$.fn.DataTable.settings);if(idx!==-1){$.fn.DataTable.settings.splice(idx,1)}})})}}initAngularDataTables.$inject=["$log"];"use strict";angular.module("datatables.options",[]).constant("DT_DEFAULT_OPTIONS",{dom:"lfrtip",sAjaxDataProp:"",aoColumns:[]}).service("DTDefaultOptions",dtDefaultOptions);function dtDefaultOptions(){var options={bootstrapOptions:{},setLanguageSource:setLanguageSource,setLanguage:setLanguage,setDisplayLength:setDisplayLength,setBootstrapOptions:setBootstrapOptions};return options;function setLanguageSource(sLanguageSource){$.extend($.fn.dataTable.defaults,{oLanguage:{sUrl:sLanguageSource}});return options}function setLanguage(oLanguage){$.extend(true,$.fn.dataTable.defaults,{oLanguage:oLanguage});return options}function setDisplayLength(iDisplayLength){$.extend($.fn.dataTable.defaults,{iDisplayLength:iDisplayLength});return options}function setBootstrapOptions(oBootstrapOptions){options.bootstrapOptions=oBootstrapOptions;return options}}"use strict";angular.module("datatables.renderer",["datatables.instances","datatables.factory","datatables.options","datatables.instances"]).factory("DTRendererService",dtRendererService).factory("DTRenderer",dtRenderer).factory("DTDefaultRenderer",dtDefaultRenderer).factory("DTNGRenderer",dtNGRenderer).factory("DTPromiseRenderer",dtPromiseRenderer).factory("DTAjaxRenderer",dtAjaxRenderer).factory("DTRendererFactory",dtRendererFactory);function dtRendererService(DTLoadingTemplate){var $loading=angular.element(DTLoadingTemplate.html);var plugins=[];var rendererService={getLoadingElem:getLoadingElem,showLoading:showLoading,hideLoading:hideLoading,renderDataTable:renderDataTable,hideLoadingAndRenderDataTable:hideLoadingAndRenderDataTable,registerPlugin:registerPlugin,postRender:postRender,preRender:preRender};return rendererService;function getLoadingElem(){return $loading}function showLoading($elem){$elem.after($loading);$elem.hide();$loading.show()}function hideLoading($elem){$elem.show();$loading.hide()}function renderDataTable($elem,options){var dtId="#"+$elem.attr("id");if($.fn.dataTable.isDataTable(dtId)&&angular.isObject(options)){options.destroy=true}var DT=$elem.DataTable(options);var dt=$elem.dataTable();var result={id:$elem.attr("id"),DataTable:DT,dataTable:dt};postRender(options,result);return result}function hideLoadingAndRenderDataTable($elem,options){rendererService.hideLoading($elem);return rendererService.renderDataTable($elem,options)}function registerPlugin(plugin){plugins.push(plugin)}function postRender(options,result){angular.forEach(plugins,function(plugin){if(angular.isFunction(plugin.postRender)){plugin.postRender(options,result)}})}function preRender(options){angular.forEach(plugins,function(plugin){if(angular.isFunction(plugin.preRender)){plugin.preRender(options)}})}}dtRendererService.$inject=["DTLoadingTemplate"];function dtRenderer(){return{withOptions:function(options){this.options=options;return this}}}function dtDefaultRenderer($q,DTRenderer,DTRendererService,DTInstanceFactory,DTInstances){return{create:create};function create(options){var _oTable;var _$elem;var renderer=Object.create(DTRenderer);renderer.name="DTDefaultRenderer";renderer.options=options;renderer.render=render;renderer.reloadData=reloadData;renderer.changeData=changeData;renderer.rerender=rerender;function render($elem){_$elem=$elem;var dtInstance=DTInstanceFactory.newDTInstance(renderer);var result=DTRendererService.hideLoadingAndRenderDataTable($elem,renderer.options);_oTable=result.DataTable;return $q.when(DTInstances.register(dtInstance,result))}function reloadData(){}function changeData(){}function rerender(){_oTable.destroy();DTRendererService.showLoading(_$elem);render(_$elem)}return renderer}}dtDefaultRenderer.$inject=["$q","DTRenderer","DTRendererService","DTInstanceFactory","DTInstances"];function dtNGRenderer($log,$q,$compile,$timeout,DTRenderer,DTRendererService,DTInstances,DTInstanceFactory){return{create:create};function create(options){var _staticHTML;var _oTable;var _$elem;var _parentScope;var dtInstance;var renderer=Object.create(DTRenderer);renderer.name="DTNGRenderer";renderer.options=options;renderer.render=render;renderer.reloadData=reloadData;renderer.changeData=changeData;renderer.rerender=rerender;return renderer;function render($elem,$scope,staticHTML){_staticHTML=staticHTML;_$elem=$elem;_parentScope=$scope.$parent;dtInstance=DTInstanceFactory.newDTInstance(renderer);var defer=$q.defer();var _expression=$elem.find("tbody").html();var _match=_expression.match(/^\s*.+?\s+in\s+(\S*)\s*/);var _ngRepeatAttr=_match[1];if(!_match){throw new Error('Expected expression in form of "_item_ in _collection_[ track by _id_]" but got "{0}".',_expression)}var _alreadyRendered=false;_parentScope.$watchCollection(_ngRepeatAttr,function(){if(_oTable&&_alreadyRendered){_destroyAndCompile()}$timeout(function(){_alreadyRendered=true;var result=DTRendererService.hideLoadingAndRenderDataTable(_$elem,renderer.options);_oTable=result.DataTable;defer.resolve(DTInstances.register(dtInstance,result))},0,false)},true);return defer.promise}function reloadData(){$log.warn("The Angular Renderer does not support reloading data. You need to do it directly on your model")}function changeData(){$log.warn("The Angular Renderer does not support changing the data. You need to change your model directly.")}function rerender(){_destroyAndCompile();DTRendererService.showLoading(_$elem);$timeout(function(){var result=DTRendererService.hideLoadingAndRenderDataTable(_$elem,renderer.options);_oTable=result.DataTable;dtInstance=DTInstances.register(dtInstance,result)},0,false)}function _destroyAndCompile(){_oTable.ngDestroy();_$elem.html(_staticHTML);$compile(_$elem.contents())(_parentScope)}}}dtNGRenderer.$inject=["$log","$q","$compile","$timeout","DTRenderer","DTRendererService","DTInstances","DTInstanceFactory"];function dtPromiseRenderer($q,$timeout,$log,DTRenderer,DTRendererService,DTInstances,DTInstanceFactory){return{create:create};function create(options){var _oTable;var _loadedPromise=null;var _$elem;var dtInstance;var renderer=Object.create(DTRenderer);renderer.name="DTPromiseRenderer";renderer.options=options;renderer.render=render;renderer.reloadData=reloadData;renderer.changeData=changeData;renderer.rerender=rerender;return renderer;function render($elem){var defer=$q.defer();dtInstance=DTInstanceFactory.newDTInstance(renderer);_$elem=$elem;_resolve(renderer.options.fnPromise,DTRendererService.renderDataTable).then(function(result){_oTable=result.DataTable;defer.resolve(DTInstances.register(dtInstance,result))});return defer.promise}function reloadData(){if(angular.isFunction(renderer.options.fnPromise)){_resolve(renderer.options.fnPromise,_redrawRows)}else{$log.warn("In order to use the reloadData functionality with a Promise renderer, you need to provide a function that returns a promise.")}}function changeData(fnPromise){renderer.options.fnPromise=fnPromise;_resolve(renderer.options.fnPromise,_redrawRows)}function rerender(){_oTable.destroy();DTRendererService.showLoading(_$elem);render(_$elem)}function _resolve(fnPromise,callback){var defer=$q.defer();if(angular.isUndefined(fnPromise)){throw new Error("You must provide a promise or a function that returns a promise!")}if(_loadedPromise){_loadedPromise.then(function(){defer.resolve(_startLoading(fnPromise,callback))})}else{defer.resolve(_startLoading(fnPromise,callback))}return defer.promise}function _startLoading(fnPromise,callback){var defer=$q.defer();if(angular.isFunction(fnPromise)){_loadedPromise=fnPromise()}else{_loadedPromise=fnPromise}_loadedPromise.then(function(result){var data=result;if(renderer.options.sAjaxDataProp){var properties=renderer.options.sAjaxDataProp.split(".");while(properties.length){var property=properties.shift();if(property in data){data=data[property]}}}_loadedPromise=null;defer.resolve(_doRender(renderer.options,_$elem,data,callback))});return defer.promise}function _doRender(options,$elem,data,callback){var defer=$q.defer();delete data.$promise;options.aaData=data;$timeout(function(){DTRendererService.hideLoading($elem);options.bDestroy=true;defer.resolve(callback($elem,options))},0,false);return defer.promise}function _redrawRows(){_oTable.clear();_oTable.rows.add(options.aaData).draw();return{id:dtInstance.id,DataTable:dtInstance.DataTable,dataTable:dtInstance.dataTable}}}}dtPromiseRenderer.$inject=["$q","$timeout","$log","DTRenderer","DTRendererService","DTInstances","DTInstanceFactory"];function dtAjaxRenderer($q,$timeout,DTRenderer,DTRendererService,DT_DEFAULT_OPTIONS,DTInstances,DTInstanceFactory){return{create:create};function create(options){var _oTable;var _$elem;var renderer=Object.create(DTRenderer);renderer.name="DTAjaxRenderer";renderer.options=options;renderer.render=render;renderer.reloadData=reloadData;renderer.changeData=changeData;renderer.rerender=rerender;return renderer;function render($elem){_$elem=$elem;var defer=$q.defer();var dtInstance=DTInstanceFactory.newDTInstance(renderer);if(angular.isUndefined(renderer.options.sAjaxDataProp)){renderer.options.sAjaxDataProp=DT_DEFAULT_OPTIONS.sAjaxDataProp}if(angular.isUndefined(renderer.options.aoColumns)){renderer.options.aoColumns=DT_DEFAULT_OPTIONS.aoColumns}_doRender(renderer.options,$elem).then(function(result){_oTable=result.DataTable;defer.resolve(DTInstances.register(dtInstance,result))});return defer.promise}function reloadData(){if(_oTable){var ajaxUrl=renderer.options.ajax.url||renderer.options.ajax;_oTable.ajax.url(ajaxUrl).load()}}function changeData(ajax){renderer.options.ajax=ajax;renderer.reloadData()}function rerender(){_oTable.destroy();DTRendererService.showLoading(_$elem);render(_$elem)}function _doRender(options,$elem){var defer=$q.defer();options.bDestroy=true;DTRendererService.hideLoading($elem);if(_shouldDeferRender(options)){$timeout(function(){defer.resolve(DTRendererService.renderDataTable($elem,options))},0,false)}else{defer.resolve(DTRendererService.renderDataTable($elem,options))}return defer.promise}function _shouldDeferRender(options){if(angular.isDefined(options)&&angular.isDefined(options.dom)){return options.dom.indexOf("S")>=0}return false}}}dtAjaxRenderer.$inject=["$q","$timeout","DTRenderer","DTRendererService","DT_DEFAULT_OPTIONS","DTInstances","DTInstanceFactory"];function dtRendererFactory(DTDefaultRenderer,DTNGRenderer,DTPromiseRenderer,DTAjaxRenderer){return{fromOptions:fromOptions};function fromOptions(options,isNgDisplay){if(isNgDisplay){return DTNGRenderer.create(options)}if(angular.isDefined(options)){if(angular.isDefined(options.fnPromise)&&options.fnPromise!==null){return DTPromiseRenderer.create(options)}if(angular.isDefined(options.ajax)&&options.ajax!==null||angular.isDefined(options.ajax)&&options.ajax!==null){return DTAjaxRenderer.create(options)}return DTDefaultRenderer.create(options)}return DTDefaultRenderer.create()}}dtRendererFactory.$inject=["DTDefaultRenderer","DTNGRenderer","DTPromiseRenderer","DTAjaxRenderer"];"use strict";angular.module("datatables.util",[]).factory("DTPropertyUtil",dtPropertyUtil);function dtPropertyUtil($q){return{overrideProperties:overrideProperties,deleteProperty:deleteProperty,resolveObjectPromises:resolveObjectPromises,resolveArrayPromises:resolveArrayPromises};function overrideProperties(source,target){var result=angular.copy(source);if(angular.isUndefined(result)||result===null){result={}}if(angular.isUndefined(target)||target===null){return result}if(angular.isObject(target)){for(var prop in target){if(target.hasOwnProperty(prop)){result[prop]=overrideProperties(result[prop],target[prop])}}}else{result=angular.copy(target)}return result}function deleteProperty(obj,propertyName){if(angular.isObject(obj)){delete obj[propertyName]}}function resolveObjectPromises(obj,excludedPropertiesName){var defer=$q.defer(),promises=[],resolvedObj={},excludedProp=excludedPropertiesName||[];if(!angular.isObject(obj)||angular.isArray(obj)){defer.resolve(obj)}else{resolvedObj=angular.extend(resolvedObj,obj);for(var prop in resolvedObj){if(resolvedObj.hasOwnProperty(prop)&&$.inArray(prop,excludedProp)===-1){if(angular.isArray(resolvedObj[prop])){promises.push(resolveArrayPromises(resolvedObj[prop]))}else{promises.push($q.when(resolvedObj[prop]))}}}$q.all(promises).then(function(result){var index=0;for(var prop in resolvedObj){if(resolvedObj.hasOwnProperty(prop)&&$.inArray(prop,excludedProp)===-1){resolvedObj[prop]=result[index++]}}defer.resolve(resolvedObj)})}return defer.promise}function resolveArrayPromises(array){var defer=$q.defer(),promises=[],resolveArray=[];if(!angular.isArray(array)){defer.resolve(array)}else{angular.forEach(array,function(item){if(angular.isObject(item)){promises.push(resolveObjectPromises(item))}else{promises.push($q.when(item))}});$q.all(promises).then(function(result){angular.forEach(result,function(item){resolveArray.push(item)});defer.resolve(resolveArray)})}return defer.promise}}dtPropertyUtil.$inject=["$q"]})(window,document,jQuery,angular);
