# Generated by Django 1.11.16 on 2018-10-08 18:15

import axis.geographic.placedmodels
import axis.relationship.models
from django.db import migrations, models
import localflavor.us.models
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Community",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "cross_roads",
                    models.CharField(
                        blank=True,
                        help_text="Enter the crossroads or street intersection of this subdivision or leave blank if unknown.",
                        max_length=128,
                        verbose_name="Crossroads",
                    ),
                ),
                (
                    "is_multi_family",
                    models.BooleanField(
                        default=False,
                        help_text="This denotes a multi-family project, such as an apartment or condo",
                        verbose_name="Multi-family",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='A community, also known as a "master-planned community", is a parcel of land in which one or more builders intend to build several subdivisions.  To add a community association or create a new community, type the first few letters of the name of the community that you wish to associate with.  If the community you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the community does not exist within the database, type the name of the community, select it in the "Create new" list, and populate the fields below.',
                        max_length=100,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the community.",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("modified_date", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(max_length=255, unique=True)),
            ],
            options={
                "ordering": ("name",),
                "verbose_name_plural": "Communities",
                "verbose_name": "Community",
                "permissions": (("view_community", "View Community"),),
            },
            bases=(
                axis.relationship.models.RelationshipUtilsMixin,
                axis.geographic.placedmodels.PlaceSynchronizationMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalCommunity",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        choices=[
                            (b"AL", "Alabama"),
                            (b"AK", "Alaska"),
                            (b"AS", "American Samoa"),
                            (b"AZ", "Arizona"),
                            (b"AR", "Arkansas"),
                            (b"AA", "Armed Forces Americas"),
                            (b"AE", "Armed Forces Europe"),
                            (b"AP", "Armed Forces Pacific"),
                            (b"CA", "California"),
                            (b"CO", "Colorado"),
                            (b"CT", "Connecticut"),
                            (b"DE", "Delaware"),
                            (b"DC", "District of Columbia"),
                            (b"FL", "Florida"),
                            (b"GA", "Georgia"),
                            (b"GU", "Guam"),
                            (b"HI", "Hawaii"),
                            (b"ID", "Idaho"),
                            (b"IL", "Illinois"),
                            (b"IN", "Indiana"),
                            (b"IA", "Iowa"),
                            (b"KS", "Kansas"),
                            (b"KY", "Kentucky"),
                            (b"LA", "Louisiana"),
                            (b"ME", "Maine"),
                            (b"MD", "Maryland"),
                            (b"MA", "Massachusetts"),
                            (b"MI", "Michigan"),
                            (b"MN", "Minnesota"),
                            (b"MS", "Mississippi"),
                            (b"MO", "Missouri"),
                            (b"MT", "Montana"),
                            (b"NE", "Nebraska"),
                            (b"NV", "Nevada"),
                            (b"NH", "New Hampshire"),
                            (b"NJ", "New Jersey"),
                            (b"NM", "New Mexico"),
                            (b"NY", "New York"),
                            (b"NC", "North Carolina"),
                            (b"ND", "North Dakota"),
                            (b"MP", "Northern Mariana Islands"),
                            (b"OH", "Ohio"),
                            (b"OK", "Oklahoma"),
                            (b"OR", "Oregon"),
                            (b"PA", "Pennsylvania"),
                            (b"PR", "Puerto Rico"),
                            (b"RI", "Rhode Island"),
                            (b"SC", "South Carolina"),
                            (b"SD", "South Dakota"),
                            (b"TN", "Tennessee"),
                            (b"TX", "Texas"),
                            (b"UT", "Utah"),
                            (b"VT", "Vermont"),
                            (b"VI", "Virgin Islands"),
                            (b"VA", "Virginia"),
                            (b"WA", "Washington"),
                            (b"WV", "West Virginia"),
                            (b"WI", "Wisconsin"),
                            (b"WY", "Wyoming"),
                        ],
                        editable=False,
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                ("confirmed_address", models.BooleanField(default=False)),
                (
                    "address_override",
                    models.BooleanField(
                        default=False,
                        help_text="Bypass the attempt to normalize the address via a mapping service. Changing address fields after marking this option will unmark it.",
                        verbose_name="Override address",
                    ),
                ),
                (
                    "cross_roads",
                    models.CharField(
                        blank=True,
                        help_text="Enter the crossroads or street intersection of this subdivision or leave blank if unknown.",
                        max_length=128,
                        verbose_name="Crossroads",
                    ),
                ),
                (
                    "is_multi_family",
                    models.BooleanField(
                        default=False,
                        help_text="This denotes a multi-family project, such as an apartment or condo",
                        verbose_name="Multi-family",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='A community, also known as a "master-planned community", is a parcel of land in which one or more builders intend to build several subdivisions.  To add a community association or create a new community, type the first few letters of the name of the community that you wish to associate with.  If the community you wish to associate with already exists within the database, select it from the "Select from existing" list and click on "Submit" at the bottom of this page to create the association.  If the community does not exist within the database, type the name of the community, select it in the "Create new" list, and populate the fields below.',
                        max_length=100,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Optional field - Enter the website for the community.",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_date", models.DateTimeField(blank=True, editable=False)),
                ("modified_date", models.DateTimeField(blank=True, editable=False)),
                ("slug", models.SlugField(max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                ("history_date", models.DateTimeField()),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
            ],
            options={
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
                "verbose_name": "historical Community",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
