angular.module("axis.region.regionSet").controller("RegionSetController",function(e,n,i,o,t,r,s,a){function l(e){return $.regions.push(s.addRegion(_(e))),O(),e}function d(e){var n=$.regions.indexOf(e);if($.regions.splice(n,1),$.parentRegionObject){var i=$.parentRegionObject.controller.children.indexOf(e);$.parentRegionObject.controller.children.splice(i,1)}}function g(e){if(!h()){$.processing=!0;var n={region_dependencies:$.region_dependencies,object:{}};return a.utils.resolveDependencies(n,!1).then(function(e){return a.utils.formatUrl($.new_region_url,e.object,$.type_name)}).then(function(n){return r.addObjectRequest(n,e)}).then($.addRegion).finally(function(){$.processing=!1})}}function c(n,i){$.regionsErrors={},e.$broadcast($.event+":success",i.getRegionObject(),$.$element)}function u(n,i){angular.isObject(n)&&angular.forEach(n,function(e,n){angular.isUndefined($.regionsErrors[n])&&($.regionsErrors[n]=[]),angular.isArray(e)?angular.forEach(e,function(e){-1==$.regionsErrors[n].indexOf(e)&&$.regionsErrors[n].push(e)}):-1==$.regionsErrors[n].indexOf(e)&&$.regionsErrors[n].push(e)}),e.$broadcast($.event+":error",i.getRegionObject(),$.$element)}function f(n,o){$.detailTemplatesCount++,i(function(){e.$broadcast($.event+":detailTemplateLoaded",n,o)}),O()}function p(n,o){$.formTemplatesCount++,i(function(){e.$broadcast($.event+":formTemplateLoaded",n,o)}),O()}function b(){var e=$.endpoints.length,n=$.regions.length>=e&&($.detailTemplatesCount>=e||$.formTemplatesCount>=e);return n&&($.isDoneLoading=function(){return n}),n}function m(){return $.regions.length}function R(){n.$watch("options.endpoints",function(e,i){if(!angular.equals(e,i)){var o={region_dependencies:n.options.region_dependencies,object:{},parentRegionSet:{parentRegionObject:$.parentRegionObject}};a.utils.resolveDependencies(o,!1).then(function(n){angular.forEach(e,function(e){var i=a.utils.formatUrl(e,n.object);-1==x.indexOf(i)&&S(i)})})}})}function h(){return null!==$.max_regions&&$.regions.length>=$.max_regions}function v(){j(),n.options.visible_fields=n.visibleFields||n.options.visible_fields,angular.extend($,n.options),$.event=$.eventPrefix+$.type_name,0==$.endpoints.length?O():E()}function _(e){return e.region_dependencies=$.region_dependencies,$.parentRegionObject&&(e.parentRegionObject=$.parentRegionObject),e.parentRegionController=$,e}function j(){if(angular.isUndefined(n.options.endpoints))throw new Error("RegionSets require endpoints to be defined");angular.isUndefined(n.options.new_region_url)&&t.warn("RegionSet does not have new_region_endpoint defined"),angular.isDefined(n.visibleFields)&&angular.isDefined(n.options.visible_fields)?t.warn("RegionSet: visible_fields is defined in both the element and options."):angular.isUndefined(n.visibleFields)&&angular.isUndefined(n.options.visible_fields)&&t.warn("RegionSet: visible_fields is not defined on either the element or options.")}function O(){b()&&($.processing=!1,i(function(){e.$broadcast("RegionLoaded",$,$.$element),e.$broadcast($.event,$.regions,$.$element)}))}function E(){var e={region_dependencies:n.options.region_dependencies,object:{},parentRegionSet:{parentRegionObject:$.parentRegionObject}};a.utils.resolveDependencies(e,!1).then(function(e){angular.forEach($.endpoints,function(n){var i=a.utils.formatUrl(n,e.object);S(i)})})}function S(e){x.push(e),r.addObjectRequest(e).then($.addRegion)}var $=this,x=[];$.regions=[],$.processing=!1,$.regionsErrors={},$.initialLoad=!1,$.eventPrefix="RegionSetLoaded:",$.detailTemplatesCount=0,$.formTemplatesCount=0,$.parentRegionObject=n.$parent.regionObject,$.addRegion=l,$.hotUpdate=R,$.regionError=u,$.removeRegion=d,$.regionSuccess=c,$.isDoneLoading=b,$.fetchNewRegion=g,$.getRegionCount=m,$.getRegion=S,$.isFull=h,n.formTemplateLoaded=p,n.detailTemplateLoaded=f,v()}).directive("axisRegionSet",function(e,n){return{restrict:"E",scope:{options:"=",visibleFields:"=?"},controller:"RegionSetController",controllerAs:"regionSet",template:'<div class="region-set" ng-include src="regionSet.regionset_template_url"></div>',link:function(e,n,i){e.regionSet.$element=n,angular.isDefined(i.hotUpdate)&&e.regionSet.hotUpdate(),angular.isDefined(i.skipChildRegistration)&&(e.skipChildRegistration=e.$eval(i.skipChildRegistration))}}}).directive("regionSetNonFieldErrors",function(e){return{restrict:"EA",template:'<ul class="text-danger" ng-if="regionSet.regionsErrors.non_field_errors"> <li ng-repeat="message in regionSet.regionsErrors.non_field_errors"><span ng-bind-html="message | trustAsHtml"></span></li> </ul>'}});
