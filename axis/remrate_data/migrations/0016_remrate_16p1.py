# Generated by Django 3.2.5 on 2021-07-23 17:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("remrate_data", "0015_auto_20210128_1545"),
    ]

    operations = [
        migrations.AddField(
            model_name="generalmechanicalequipment",
            name="capacity_weighting_dehumidifier",
            field=models.BooleanField(
                db_column="nEIDHUCAPWT", null=True, verbose_name="Capacity Weighting Dehumidifier"
            ),
        ),
        migrations.AddField(
            model_name="generalmechanicalequipment",
            name="whf_flow",
            field=models.FloatField(blank=True, db_column="fEIWHFFlow", null=True),
        ),
        migrations.AddField(
            model_name="generalmechanicalequipment",
            name="whf_watts",
            field=models.FloatField(blank=True, db_column="FEIWHFWatts", null=True),
        ),
        migrations.AddField(
            model_name="hotwaterdistribution",
            name="number_homes_served",
            field=models.IntegerField(blank=True, db_column="nHomesServed", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="_dehumidifier_number",
            field=models.IntegerField(blank=True, db_column="lDhuEqKey", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="_shared_equipment_number",
            field=models.IntegerField(blank=True, db_column="lSharedEqKey", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="clothes_washer_load_served_pct",
            field=models.FloatField(blank=True, db_column="fCWLoadSrvd", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="dehumidifier_load_served_pct",
            field=models.FloatField(blank=True, db_column="fDhuLoadSrvd", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="dishwasher_load_served_pct",
            field=models.FloatField(blank=True, db_column="fDWLoadSrvd", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="hot_water_units_served",
            field=models.IntegerField(blank=True, db_column="nDwellUnitsDhw", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="mechanical_ventilation_cooling_load_served_pct",
            field=models.FloatField(blank=True, db_column="fMVClgLoadSrvd", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="mechanical_ventilation_heating_load_served_pct",
            field=models.FloatField(blank=True, db_column="fMVHtgLoadSrvd", null=True),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="preconditioned_shared_mechanical_ventilation",
            field=models.IntegerField(blank=True, db_column="nPrecondSharedMV", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="ceiling_fan_count",
            field=models.IntegerField(blank=True, db_column="nLAFanCnt", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="clothes_washer_iwf",
            field=models.FloatField(blank=True, db_column="fLAWashIWF", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="clothes_washer_loads_per_week",
            field=models.IntegerField(blank=True, db_column="nLAWashLoad", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="clothes_washer_presets",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (1, "ERI Ref 2006"),
                    (2, "Standard 2008-2017"),
                    (3, "ENERGY STAR, Std Capacity"),
                    (4, "ENERGY STAR, Compact"),
                    (5, "Specific EnergyGuide label"),
                ],
                db_column="nLAWashPre",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dishwasher_electric_rate",
            field=models.FloatField(db_column="fLADishElec", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dishwasher_gas_cost",
            field=models.FloatField(db_column="fLADishGCst", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dishwasher_gas_rate",
            field=models.FloatField(db_column="fLADishGas", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dishwasher_loads_per_week",
            field=models.IntegerField(blank=True, db_column="nLADishLoad", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dishwasher_location",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "None (ERI Default)"),
                    (1, "Conditioned"),
                    (2, "Unconditioned"),
                    (3, "MF Shared Space"),
                ],
                db_column="nLADishLoc",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dishwasher_presets",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (1, "ERI Reference"),
                    (2, "Federal Minimum"),
                    (3, "ENERGY STAR, Std Capacity"),
                    (4, "ENERGY STAR, Compact"),
                    (5, "Specific EnergyGuide label"),
                ],
                db_column="nLADishPre",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dwelling_units_per_clothes_washer",
            field=models.IntegerField(blank=True, db_column="nLAWashUnit", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="dwelling_units_per_dryer",
            field=models.IntegerField(blank=True, db_column="nLADryUnit", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="oven_location",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "None (ERI Default)"),
                    (1, "Conditioned"),
                    (2, "Unconditioned"),
                    (3, "MF Shared Space"),
                ],
                db_column="nLAOvnLoc",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="shared_hot_water_equipment_number_for_clothes_washer",
            field=models.IntegerField(blank=True, db_column="nLAWashDhw", null=True),
        ),
        migrations.AddField(
            model_name="lightsandappliance",
            name="shared_hot_water_equipment_number_for_dishwasher",
            field=models.IntegerField(blank=True, db_column="nLADishDhw", null=True),
        ),
        migrations.AddField(
            model_name="mandatoryrequirements",
            name="verified_ngbs_2015",
            field=models.BooleanField(blank=True, db_column="nMRNGBS15", null=True),
        ),
        migrations.AddField(
            model_name="photovoltaic",
            name="number_bedrooms",
            field=models.IntegerField(blank=True, db_column="nPVNumBeds", null=True),
        ),
        migrations.AddField(
            model_name="slab",
            name="location",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "None"),
                    (1, "Mainfloor conditioned space"),
                    (2, "Conditioned basement"),
                    (3, "Conditioned crawlspace"),
                    (4, "Attached Garage"),
                ],
                db_column="nSFLoc",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="window",
            name="window_operates",
            field=models.IntegerField(
                blank=True, choices=[(1, "Yes"), (2, "No")], db_column="nWDOperate", null=True
            ),
        ),
        migrations.AlterField(
            model_name="abovegradewall",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="acceptedmeasure",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="additionalmass",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="airconditioner",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="airsourceheatpump",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="block",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="building",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="buildinginfo",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="ceilingtype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="compliance",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="compositetype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="datatracker",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="doechallenge",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="door",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="doortype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="dualfuelheatpump",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="duct",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="ductsystem",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="economicparameters",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="energystar",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="energystarrequirements",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="floortype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="florida",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="foundationwall",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="foundationwalltype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="framefloor",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="fuelsummary",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="generalmechanicalequipment",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="groundsourceheatpump",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="groundsourceheatpumpwell",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="heater",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="heatpath",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="hercinfo",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="hers",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="historicalsimulation",
            name="id",
            field=models.BigIntegerField(
                auto_created=True, blank=True, db_index=True, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="hotwaterdistribution",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="hotwaterheater",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="iecc",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="infiltration",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="installedequipment",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="installedlightsandappliances",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="integratedspacewaterheater",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="joist",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="lightsandappliance",
            name="clothes_dryer_location",
            field=models.IntegerField(
                choices=[
                    (0, "None (ERI Default)"),
                    (1, "Conditioned"),
                    (2, "Unconditioned"),
                    (3, "MF Shared Space"),
                ],
                db_column="NLADRYLOC",
            ),
        ),
        migrations.AlterField(
            model_name="lightsandappliance",
            name="clothes_washer_location",
            field=models.IntegerField(
                choices=[
                    (0, "None (ERI Default)"),
                    (1, "Conditioned"),
                    (2, "Unconditioned"),
                    (3, "MF Shared Space"),
                ],
                db_column="NLAWASHLOC",
            ),
        ),
        migrations.AlterField(
            model_name="lightsandappliance",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="lightsandappliance",
            name="refrigerator_location",
            field=models.IntegerField(
                choices=[
                    (0, "None (ERI Default)"),
                    (1, "Conditioned"),
                    (2, "Unconditioned"),
                    (3, "MF Shared Space"),
                ],
                db_column="NLAREFLOC",
            ),
        ),
        migrations.AlterField(
            model_name="mandatoryrequirements",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="nevmeas",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="photovoltaic",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="regionalcode",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="rejectedmeasure",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="resnetdisc",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="results",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="roof",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="seasonalrate",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="simplifiedinput",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="simulation",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="site",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="skylight",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="slab",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="slabtype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="solarsystem",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="sunspace",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="sunspacecommonwall",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="sunspacemass",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="sunspaceskylight",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="sunspacewindow",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="utilityrate",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="walltype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="window",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="windowtype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.CreateModel(
            name="WaterLoopHeatPump",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("_result_number", models.IntegerField(db_column="lBldgRunNo")),
                (
                    "_source_water_loop_heat_pump_number",
                    models.IntegerField(db_column="lWlhpEqKey"),
                ),
                ("name", models.CharField(blank=True, db_column="sName", max_length=31, null=True)),
                (
                    "heating_efficiency",
                    models.FloatField(db_column="fHtgEff", help_text="COP", null=True),
                ),
                (
                    "heating_capacity",
                    models.FloatField(db_column="fHtgCap", help_text="kBtuh", null=True),
                ),
                (
                    "cooling_efficiency",
                    models.FloatField(db_column="fClgEff", help_text="EER", null=True),
                ),
                (
                    "cooling_capacity",
                    models.FloatField(db_column="fClgCap", help_text="kBtuh", null=True),
                ),
                ("sensible_heat_fraction", models.FloatField(db_column="fClgSHF", null=True)),
                (
                    "note",
                    models.CharField(blank=True, db_column="sNote", max_length=765, null=True),
                ),
                (
                    "simulation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="remrate_data.simulation"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ventilation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("_result_number", models.IntegerField(db_column="lBldgRunNo")),
                ("_source_building_number", models.IntegerField(db_column="lBldgNo")),
                (
                    "rating_number",
                    models.CharField(blank=True, db_column="sMVRateNo", max_length=31),
                ),
                (
                    "name",
                    models.CharField(blank=True, db_column="sMVName", max_length=31, null=True),
                ),
                (
                    "type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "None"),
                            (1, "Balanced"),
                            (2, "Exhaust Only"),
                            (3, "Supply Only"),
                            (4, "Air Cycler"),
                        ],
                        db_column="nMVType",
                        null=True,
                    ),
                ),
                (
                    "rate",
                    models.FloatField(
                        blank=True, db_column="fMVRate", help_text="Delivered CFM", null=True
                    ),
                ),
                (
                    "hours_per_day",
                    models.IntegerField(
                        blank=True, db_column="nMVHrsDay", help_text="Hours/Day", null=True
                    ),
                ),
                ("fan_power", models.FloatField(blank=True, db_column="fMVFanPwr", null=True)),
                (
                    "ashrae_recovery_efficiency",
                    models.FloatField(blank=True, db_column="fMVASRE", null=True),
                ),
                (
                    "atre_recovery_efficiency",
                    models.FloatField(blank=True, db_column="fMVATRE", null=True),
                ),
                (
                    "not_measured",
                    models.IntegerField(blank=True, db_column="nMVNotMsrd", null=True),
                ),
                (
                    "use_defaults",
                    models.IntegerField(blank=True, db_column="nMVWattDflt", null=True),
                ),
                (
                    "uses_ecm_fan",
                    models.IntegerField(blank=True, db_column="nMVFanMotor", null=True),
                ),
                (
                    "duct_system_number",
                    models.IntegerField(blank=True, db_column="nMVDuctNo", null=True),
                ),
                (
                    "shared_multi_family_system",
                    models.IntegerField(blank=True, db_column="nMVShrdMF", null=True),
                ),
                (
                    "heating_equipment_number",
                    models.IntegerField(
                        db_column="nMVHtgNo", help_text="Preconditioning Htg Equip", null=True
                    ),
                ),
                (
                    "cooling_equipment_number",
                    models.IntegerField(
                        db_column="nMVClgNo", help_text="Preconditioning Clg Equip", null=True
                    ),
                ),
                (
                    "total_shared_system_cfm",
                    models.FloatField(blank=True, db_column="fMVShrdCFM", null=True),
                ),
                ("outside_air_pct", models.FloatField(blank=True, db_column="fMVOAPct", null=True)),
                (
                    "recirculated_air_pct",
                    models.FloatField(blank=True, db_column="fMVReCirc", null=True),
                ),
                (
                    "simulation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="remrate_data.simulation"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SharedEquipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("_result_number", models.IntegerField(db_column="lBldgRunNo")),
                ("_source_shared_equipment_number", models.IntegerField(db_column="lSharedEqKey")),
                (
                    "name",
                    models.CharField(blank=True, db_column="sName", max_length=31, null=True),
                ),
                (
                    "type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Boiler"),
                            (2, "Chiller"),
                            (3, "Cooling Tower"),
                            (4, "GSHP Loop"),
                        ],
                        db_column="nSystem",
                        null=True,
                    ),
                ),
                (
                    "fuel_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Natural gas"),
                            (2, "Propane"),
                            (3, "Fuel oil"),
                            (4, "Electric"),
                            (5, "Kerosene"),
                            (6, "Wood"),
                            (98, "Water"),
                        ],
                        db_column="nFuel",
                        null=True,
                    ),
                ),
                (
                    "rated_efficiency",
                    models.FloatField(blank=True, db_column="fRatedEff", null=True),
                ),
                (
                    "rated_efficiency_unit",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "AFUE"), (2, "kW/ton")],
                        db_column="nRatedEffUnit",
                        null=True,
                    ),
                ),
                (
                    "boiler_capacity",
                    models.FloatField(blank=True, db_column="fBoilerCap", null=True),
                ),
                (
                    "chiller_capacity",
                    models.FloatField(blank=True, db_column="fChillerCap", null=True),
                ),
                (
                    "gshp_capacity",
                    models.FloatField(blank=True, db_column="fGndLoopCap", null=True),
                ),
                (
                    "gshp_pump_power",
                    models.FloatField(blank=True, db_column="fGndLoopPump", null=True),
                ),
                (
                    "units_served",
                    models.IntegerField(blank=True, db_column="nBlgLoopUnits", null=True),
                ),
                (
                    "loop_pump_power",
                    models.FloatField(blank=True, db_column="fBlgLoopPumpPwr", null=True),
                ),
                (
                    "distribution_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Hydronic → Radiator"),
                            (2, "Hydronic → Baseboard"),
                            (3, "Hydronic → Radiant floor"),
                            (4, "Hydronic → Radiant ceiling"),
                            (5, "Air → Fan Coil"),
                            (6, "Air → WLHP"),
                            (7, "Air → GSHP"),
                            (8, "Air → GSHP (Htg and Clg)"),
                        ],
                        db_column="nTerminalType",
                        null=True,
                    ),
                ),
                ("fan_coil_watts", models.FloatField(blank=True, db_column="fFanCoil", null=True)),
                (
                    "note",
                    models.CharField(blank=True, db_column="sNote", max_length=255, null=True),
                ),
                (
                    "heating_equipment_number",
                    models.IntegerField(db_column="lHtgEqKey", help_text="Htg Equip", null=True),
                ),
                (
                    "cooling_equipment_number",
                    models.IntegerField(db_column="lClgEqKey", help_text="Clg Equip", null=True),
                ),
                (
                    "gshp_number",
                    models.IntegerField(db_column="lGshpEqKey", help_text="GSHP Equip", null=True),
                ),
                (
                    "wlhp_number",
                    models.IntegerField(db_column="lWlhpEqKey", help_text="WLHP Equip", null=True),
                ),
                (
                    "simulation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="remrate_data.simulation"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dehumidifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("_result_number", models.IntegerField(db_column="lBldgRunNo")),
                ("_source_humidifier_number", models.FloatField(db_column="lDhuEqKey")),
                ("name", models.CharField(blank=True, db_column="sName", max_length=32, null=True)),
                (
                    "type",
                    models.IntegerField(
                        choices=[(1, "Portable"), (2, "Whole-home")], db_column="nSystem", null=True
                    ),
                ),
                (
                    "fuel_type",
                    models.IntegerField(
                        choices=[
                            (1, "Natural gas"),
                            (2, "Propane"),
                            (3, "Fuel oil"),
                            (4, "Electric"),
                            (5, "Kerosene"),
                            (6, "Wood"),
                            (98, "Water"),
                        ],
                        db_column="nFuel",
                        null=True,
                    ),
                ),
                ("capacity", models.FloatField(db_column="fCapacity", null=True)),
                (
                    "efficiency",
                    models.FloatField(
                        db_column="fEfficiency",
                        help_text="Unit is IEF which is liters/kWh",
                        null=True,
                    ),
                ),
                (
                    "note",
                    models.CharField(blank=True, db_column="sNote", max_length=255, null=True),
                ),
                (
                    "simulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="remrate_data.simulation"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="dehumidifier",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="remrate_data.dehumidifier",
            ),
        ),
        migrations.AddField(
            model_name="installedequipment",
            name="shared_equipment",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="remrate_data.sharedequipment",
            ),
        ),
    ]
