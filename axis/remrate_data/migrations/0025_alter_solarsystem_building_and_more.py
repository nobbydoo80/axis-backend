# Generated by Django 4.0.7 on 2022-09-14 17:44

from django.db import migrations, models
import django.db.models.deletion


def find_dups(*args, **kwargs):
    from axis.remrate_data.models import SolarSystem
    from collections import defaultdict

    _used_buildings = defaultdict(list)
    _used_sims = defaultdict(list)
    for pk, sim_id, b_id in SolarSystem.objects.all().values_list(
        "id", "simulation_id", "building_id"
    ):
        _used_sims[sim_id].append(pk)
        _used_buildings[b_id].append(pk)

    duplicate_ss_ids = []
    for sim_id, ss_ids in _used_sims.items():
        for ss_id in ss_ids[1:]:
            duplicate_ss_ids.append(ss_id)

    for b_id, ss_ids in _used_sims.items():
        for ss_id in ss_ids[1:]:
            if ss_id not in duplicate_ss_ids:
                print("New?")
                duplicate_ss_ids.append(ss_id)

    from axis.core.merge_objects import safe_delete

    safe_delete(list(SolarSystem.objects.filter(id__in=duplicate_ss_ids)))
    return duplicate_ss_ids


class Migration(migrations.Migration):
    dependencies = [
        ("remrate_data", "0024_alter_ceilingtype_simulation_and_more"),
    ]

    operations = [
        migrations.RunPython(find_dups),
        migrations.AlterField(
            model_name="solarsystem",
            name="building",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="remrate_data.building"
            ),
        ),
        migrations.AlterField(
            model_name="solarsystem",
            name="simulation",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="remrate_data.simulation"
            ),
        ),
    ]
