# Generated by Django 2.2 on 2020-08-11 08:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("home", "0012_auto_20200311_1141"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("customer_neea", "0010_auto_20200108_1904"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="neeacertification",
            options={},
        ),
        migrations.CreateModel(
            name="HistoricalNEEACertification",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("import_failed", models.BooleanField(default=False)),
                ("import_error", models.CharField(blank=True, max_length=500, null=True)),
                ("import_traceback", models.TextField(blank=True, null=True)),
                ("created_date", models.DateField(blank=True, editable=False)),
                ("modified_date", models.DateField(blank=True, editable=False)),
                ("registry_id", models.CharField(blank=True, max_length=100)),
                ("street_line1", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state_abbreviation", models.CharField(blank=True, max_length=100)),
                ("zipcode", models.CharField(blank=True, max_length=100)),
                ("certification_date", models.DateField(blank=True, null=True)),
                ("home_type", models.CharField(blank=True, max_length=100)),
                ("software", models.CharField(blank=True, max_length=100)),
                ("software_version", models.CharField(blank=True, max_length=100)),
                ("construction_year", models.CharField(blank=True, max_length=100)),
                ("conditioned_area", models.CharField(blank=True, max_length=100)),
                ("conditioned_volume", models.CharField(blank=True, max_length=100)),
                ("conditioned_floors", models.CharField(blank=True, max_length=100)),
                ("number_bedrooms", models.CharField(blank=True, max_length=100)),
                ("hers_index", models.CharField(blank=True, max_length=100)),
                ("registration_type", models.CharField(blank=True, max_length=100)),
                ("total_energy_use", models.CharField(blank=True, max_length=100)),
                ("total_energy_cost", models.CharField(blank=True, max_length=100)),
                ("num_cooling_systems", models.CharField(blank=True, max_length=100)),
                ("num_heating_systems", models.CharField(blank=True, max_length=100)),
                ("cooling_energy_use", models.CharField(blank=True, max_length=100)),
                ("cost_cooling", models.CharField(blank=True, max_length=100)),
                ("cooling_rated_output", models.CharField(blank=True, max_length=100)),
                ("num_hot_water_systems", models.CharField(blank=True, max_length=100)),
                ("hot_water_energy_use", models.CharField(blank=True, max_length=100)),
                ("cost_hot_water", models.CharField(blank=True, max_length=100)),
                ("lighting_app_energy_use", models.CharField(blank=True, max_length=100)),
                ("cost_lighting", models.CharField(blank=True, max_length=100)),
                ("on_site_generation", models.CharField(blank=True, max_length=100)),
                ("annual_electricity", models.CharField(blank=True, max_length=100)),
                ("annual_gas", models.CharField(blank=True, max_length=100)),
                ("agw_wall_construction_type", models.CharField(blank=True, max_length=100)),
                ("ach50", models.CharField(blank=True, max_length=100)),
                ("ventilation_type", models.CharField(blank=True, max_length=100)),
                ("duct_leakage", models.CharField(blank=True, max_length=100)),
                ("duct_leakage_total", models.CharField(blank=True, max_length=100)),
                ("duct_leakage_tightness_test", models.CharField(blank=True, max_length=100)),
                ("duct_leakage_units", models.CharField(blank=True, max_length=100)),
                ("high_efficiency_lights_percent", models.CharField(blank=True, max_length=100)),
                ("furnace_fuel", models.CharField(blank=True, max_length=100)),
                ("water_heater_type", models.CharField(blank=True, max_length=100)),
                ("water_heater_fuel", models.CharField(blank=True, max_length=100)),
                ("ducts_conditioned", models.CharField(blank=True, max_length=100)),
                ("is_zerh", models.CharField(blank=True, max_length=100)),
                ("energy_star_version", models.CharField(blank=True, max_length=100)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "home",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="home.Home",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical neea certification",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
