# Generated by Django 1.11.17 on 2019-04-22 15:11

from django.db import migrations


def forward(apps, schema_editor):
    CollectedInput = apps.get_model("checklist.CollectedInput")
    ContentType = apps.get_model("contenttypes.ContentType")
    CustomerDocument = apps.get_model("filehandling.CustomerDocument")
    Answer = apps.get_model("checklist.Answer")
    QAAnswer = apps.get_model("checklist.QAAnswer")

    role_cts = {
        "rater": ContentType.objects.get_for_model(Answer),
        "qa": ContentType.objects.get_for_model(QAAnswer),
    }
    new_ct = ContentType.objects.get_for_model(CollectedInput)

    values_queryset = CollectedInput.objects.filter(data__hints__LEGACY=True).values_list(
        "id", "data", "user_role"
    )
    total = values_queryset.count()
    for i, (new_id, data, user_role) in enumerate(values_queryset):
        legacy_id = data["hints"]["answer_id"]
        legacy_content_type = role_cts[user_role]
        document_values = CustomerDocument.objects.filter(
            content_type=legacy_content_type, object_id=legacy_id
        ).values()
        total_documents = len(document_values)
        for j, values in enumerate(document_values):
            CustomerDocument.objects.create(
                **dict(
                    values,
                    **{
                        "id": None,
                        "content_type_id": new_ct.id,
                        "object_id": new_id,
                    },
                )
            )


def backward(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "__first__"),
        ("checklist", "0015_qadata_migrate_to_cr"),
    ]

    operations = [migrations.RunPython(forward, backward)]
