(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~zendesk"],{

/***/ "./node_modules/user-agent-parser/src/ua-parser.js":
/*!*********************************************************!*\
  !*** ./node_modules/user-agent-parser/src/ua-parser.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// UAParser.js v0.6.0\n// Lightweight JavaScript-based User-Agent string parser\n// https://github.com/faisalman/ua-parser-js\n//\n// Copyright Â© 2012-2013 Faisalman <fyzlman@gmail.com>\n// Dual licensed under GPLv2 & MIT\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet';\n\n\n    ///////////\n    // Helper\n    //////////\n\n\n    var util = {\n        has : function (str1, str2) {\n            return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;\n        },\n        lowerize : function (str) {\n            return str.toLowerCase();\n        }\n    };\n\n\n    ///////////////\n    // Map helper\n    //////////////\n\n\n    var mapper = {\n\n        rgx : function () {\n\n            // loop through all regexes maps\n            for (var result, i = 0, j, k, p, q, matches, match, args = arguments; i < args.length; i += 2) {\n\n                var regex = args[i],       // even sequence (0,2,4,..)\n                    props = args[i + 1];   // odd sequence (1,3,5,..)\n\n                // construct object barebones\n                if (typeof(result) === UNDEF_TYPE) {\n                    result = {};\n                    for (p in props) {\n                        q = props[p];\n                        if (typeof(q) === OBJ_TYPE) {\n                            result[q[0]] = undefined;\n                        } else {\n                            result[q] = undefined;\n                        }\n                    }\n                }\n\n                // try matching uastring with regexes\n                for (j = k = 0; j < regex.length; j++) {\n                    matches = regex[j].exec(this.getUA());\n                    if (!!matches) {\n                        for (p in props) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof(q) === OBJ_TYPE && q.length > 0) {\n                                if (q.length == 2) {\n                                    if (typeof(q[1]) == FUNC_TYPE) {\n                                        // assign modified match\n                                        result[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        result[q[0]] = q[1];\n                                    }\n                                } else if (q.length == 3) {\n                                    // check whether function or regex\n                                    if (typeof(q[1]) === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        result[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        result[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length == 4) {\n                                        result[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                result[q] = match ? match : undefined;\n                            }\n                        }\n                        break;\n                    }\n                }\n\n                if(!!matches) break; // break the loop immediately if match found\n            }\n            return result;\n        },\n\n        str : function (str, map) {\n\n            for (var i in map) {\n                // check if array\n                if (typeof(map[i]) === OBJ_TYPE && map[i].length > 0) {\n                    for (var j in map[i]) {\n                        if (util.has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (util.has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n        }\n    };\n\n\n    ///////////////\n    // String map\n    //////////////\n\n\n    var maps = {\n\n        browser : {\n            oldsafari : {\n                major : {\n                    '1' : ['/8', '/1', '/3'],\n                    '2' : '/4',\n                    '?' : '/'\n                },\n                version : {\n                    '1.0'   : '/8',\n                    '1.2'   : '/1',\n                    '1.3'   : '/3',\n                    '2.0'   : '/412',\n                    '2.0.2' : '/416',\n                    '2.0.3' : '/417',\n                    '2.0.4' : '/419',\n                    '?'     : '/'\n                }\n            }\n        },\n\n        device : {\n            sprint : {\n                model : {\n                    'Evo Shift 4G' : '7373KT'\n                },\n                vendor : {\n                    'HTC'       : 'APA',\n                    'Sprint'    : 'Sprint'\n                }\n            }\n        },\n\n        os : {\n            windows : {\n                version : {\n                    'ME'        : '4.90',\n                    'NT 3.11'   : 'NT3.51',\n                    'NT 4.0'    : 'NT4.0',\n                    '2000'      : 'NT 5.0',\n                    'XP'        : ['NT 5.1', 'NT 5.2'],\n                    'Vista'     : 'NT 6.0',\n                    '7'         : 'NT 6.1',\n                    '8'         : 'NT 6.2',\n                    'RT'        : 'ARM'\n                }\n            }\n        }\n    };\n\n\n    //////////////\n    // Regex map\n    /////////////\n\n\n    var regexes = {\n\n        browser : [[\n\n            // Presto based\n            /(opera\\smini)\\/((\\d+)?[\\w\\.-]+)/i,                                 // Opera Mini\n            /(opera\\s[mobiletab]+).+version\\/((\\d+)?[\\w\\.-]+)/i,                // Opera Mobi/Tablet\n            /(opera).+version\\/((\\d+)?[\\w\\.]+)/i,                               // Opera > 9.80\n            /(opera)[\\/\\s]+((\\d+)?[\\w\\.]+)/i                                    // Opera < 9.80\n\n            ], [NAME, VERSION, MAJOR], [\n\n            /\\s(opr)\\/((\\d+)?[\\w\\.]+)/i                                         // Opera Webkit\n            ], [[NAME, 'Opera'], VERSION, MAJOR], [\n\n            // Mixed\n            /(kindle)\\/((\\d+)?[\\w\\.]+)/i,                                       // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?((\\d+)?[\\w\\.]+)*/i,\n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n\n            // Trident based\n            /(avant\\s|iemobile|slim|baidu)(?:browser)?[\\/\\s]?((\\d+)?[\\w\\.]*)/i,\n                                                                                // Avant/IEMobile/SlimBrowser/Baidu\n            /(?:ms|\\()(ie)\\s((\\d+)?[\\w\\.]+)/i,                                  // Internet Explorer\n\n            // Webkit/KHTML based\n            /(rekonq)((?:\\/)[\\w\\.]+)*/i,                                        // Rekonq\n            /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt)\\/((\\d+)?[\\w\\.-]+)/i\n                                                                                // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt\n            ], [NAME, VERSION, MAJOR], [\n\n            /(yabrowser)\\/((\\d+)?[\\w\\.]+)/i                                     // Yandex\n            ], [[NAME, 'Yandex'], VERSION, MAJOR], [\n\n            /(comodo_dragon)\\/((\\d+)?[\\w\\.]+)/i                                 // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION, MAJOR], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?((\\d+)?[\\w\\.]+)/i\n                                                                                // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION, MAJOR], [\n\n            /(dolfin)\\/((\\d+)?[\\w\\.]+)/i                                        // Dolphin\n            ], [[NAME, 'Dolphin'], VERSION, MAJOR], [\n\n            /((?:android.+)crmo|crios)\\/((\\d+)?[\\w\\.]+)/i                       // Chrome for Android/iOS\n            ], [[NAME, 'Chrome'], VERSION, MAJOR], [\n\n            /version\\/((\\d+)?[\\w\\.]+).+?mobile\\/\\w+\\s(safari)/i                 // Mobile Safari\n            ], [VERSION, MAJOR, [NAME, 'Mobile Safari']], [\n\n            /version\\/((\\d+)?[\\w\\.]+).+?(mobile\\s?safari|safari)/i              // Safari & Safari Mobile\n            ], [VERSION, MAJOR, NAME], [\n\n            /webkit.+?(mobile\\s?safari|safari)((\\/[\\w\\.]+))/i                   // Safari < 3.0\n            ], [NAME, [MAJOR, mapper.str, maps.browser.oldsafari.major], [VERSION, mapper.str, maps.browser.oldsafari.version]], [\n\n            /(konqueror)\\/((\\d+)?[\\w\\.]+)/i,                                    // Konqueror\n            /(webkit|khtml)\\/((\\d+)?[\\w\\.]+)/i\n            ], [NAME, VERSION, MAJOR], [\n\n            // Gecko based\n            /(navigator|netscape)\\/((\\d+)?[\\w\\.-]+)/i                           // Netscape\n            ], [[NAME, 'Netscape'], VERSION, MAJOR], [\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?((\\d+)?[\\w\\.\\+]+)/i,\n                                                                                // Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\\/((\\d+)?[\\w\\.-]+)/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(mozilla)\\/((\\d+)?[\\w\\.]+).+rv\\:.+gecko\\/\\d+/i,                    // Mozilla\n\n            // Other\n            /(uc\\s?browser|polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf)[\\/\\s]?((\\d+)?[\\w\\.]+)/i,\n                                                                                // UCBrowser/Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf\n            /(links)\\s\\(((\\d+)?[\\w\\.]+)/i,                                      // Links\n            /(gobrowser)\\/?((\\d+)?[\\w\\.]+)*/i,                                  // GoBrowser\n            /(ice\\s?browser)\\/v?((\\d+)?[\\w\\._]+)/i,                             // ICE Browser\n            /(mosaic)[\\/\\s]((\\d+)?[\\w\\.]+)/i                                    // Mosaic\n            ], [NAME, VERSION, MAJOR]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i                     // AMD64\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i                           // PowerPC\n            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /(ia64(?=;)|68k(?=\\))|arm(?=v\\d+;)|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i\n                                                                                // IA64, 68K, ARM, IRIX, MIPS, SPARC, PA-RISC\n            ], [ARCHITECTURE, util.lowerize]\n        ],\n\n        device : [[\n\n            /\\((ipad|playbook);[\\w\\s\\);-]+(rim|apple)/i                         // iPad/PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n\n            /(hp).+(touchpad)/i,                                                // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /\\s(nook)[\\w\\s]+build\\/(\\w+)/i,                                     // Nook\n            /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i                                  // Dell Streak\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /\\((ip[honed]+);.+(apple)/i                                         // iPod/iPhone\n            ], [MODEL, VENDOR, [TYPE, MOBILE]], [\n\n            /(blackberry)[\\s-]?(\\w+)/i,                                         // BlackBerry\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola)[\\s_-]?([\\w-]+)*/i,\n                                                                                // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Huawei/Meizu/Motorola\n            /(hp)\\s([\\w\\s]+\\w)/i,                                               // HP iPAQ\n            /(asus)-?(\\w+)/i                                                    // Asus\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /\\((bb10);\\s(\\w+)/i                                                 // BlackBerry 10\n            ], [[VENDOR, 'BlackBerry'], MODEL, [TYPE, MOBILE]], [\n\n            /android.+((transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+))/i       // Asus Tablets\n            ], [[VENDOR, 'Asus'], MODEL, [TYPE, TABLET]], [\n\n            /(sony)\\s(tablet\\s[ps])/i                                           // Sony Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(nintendo)\\s([wids3u]+)/i                                          // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n\n            /((playstation)\\s[3portablevi]+)/i                                  // Playstation\n            ], [[VENDOR, 'Sony'], MODEL, [TYPE, CONSOLE]], [\n\n            /(sprint\\s(\\w+))/i                                                  // Sprint Phones\n            ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [\n\n            /(htc)[;_\\s-]+([\\w\\s]+(?=\\))|\\w+)*/i,                               // HTC\n            /(zte)-(\\w+)*/i,                                                    // ZTE\n            /(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]+)*/i\n                                                                                // Alcatel/GeeksPhone/Huawei/Lenovo/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            /\\s((milestone|droid[2x]?))[globa\\s]*\\sbuild\\//i,                   // Motorola\n            /(mot)[\\s-]?(\\w+)*/i\n            ], [[VENDOR, 'Motorola'], MODEL, [TYPE, MOBILE]], [\n            /android.+\\s((mz60\\d|xoom[\\s2]{0,2}))\\sbuild\\//i\n            ], [[VENDOR, 'Motorola'], MODEL, [TYPE, TABLET]], [\n\n            /android.+((sch-i[89]0\\d|shw-m380s|gt-p\\d{4}|gt-n8000|sgh-t8[56]9))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [                  // Samsung\n            /((s[cgp]h-\\w+|gt-\\w+|galaxy\\snexus))/i,\n            /(sam[sung]*)[\\s-]*(\\w+-?[\\w-]*)*/i,\n            /sec-((sgh\\w+))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [\n            /(sie)-(\\w+)*/i                                                     // Siemens\n            ], [[VENDOR, 'Siemens'], MODEL, [TYPE, MOBILE]], [\n\n            /(maemo|nokia).*(n900|lumia\\s\\d+)/i,                                // Nokia\n            /(nokia)[\\s_-]?([\\w-]+)*/i\n            ], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [\n\n            /android\\s3\\.[\\s\\w-;]{10}((a\\d{3}))/i                               // Acer\n            ], [[VENDOR, 'Acer'], MODEL, [TYPE, TABLET]], [\n\n            /android\\s3\\.[\\s\\w-;]{10}(lg?)-([06cv9]{3,4})/i                     // LG\n            ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [\n            /((nexus\\s4))/i,\n            /(lg)[e;\\s-\\/]+(\\w+)*/i\n            ], [[VENDOR, 'LG'], MODEL, [TYPE, MOBILE]], [\n\n            /(mobile|tablet);.+rv\\:.+gecko\\//i                                  // Unidentifiable\n            ], [TYPE, VENDOR, MODEL]\n        ],\n\n        engine : [[\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\\/([\\w\\.]+)/i,     // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m\n            /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i,                          // KHTML/Tasman/Links\n            /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i                                      // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]+).*(gecko)/i                                           // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows based\n            /(windows)\\snt\\s6\\.2;\\s(arm)/i,                                     // Windows RT\n            /(windows\\sphone(?:\\sos)*|windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)/i\n            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [\n            /(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [\n\n            // Mobile/Embedded OS\n            /\\((bb)(10);/i                                                      // BlackBerry 10\n            ], [[NAME, 'BlackBerry'], VERSION], [\n            /(blackberry)\\w*\\/?([\\w\\.]+)*/i,                                    // Blackberry\n            /(tizen)\\/([\\w\\.]+)/i,                                              // Tizen\n            /(android|webos|palm\\os|qnx|bada|rim\\stablet\\sos|meego)[\\/\\s-]?([\\w\\.]+)*/i\n                                                                                // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo\n            ], [NAME, VERSION], [\n            /(symbian\\s?os|symbos|s60(?=;))[\\/\\s-]?([\\w\\.]+)*/i                 // Symbian\n            ], [[NAME, 'Symbian'], VERSION],[\n            /mozilla.+\\(mobile;.+gecko.+firefox/i                               // Firefox OS\n            ], [[NAME, 'Firefox OS'], VERSION], [\n\n            // Console\n            /(nintendo|playstation)\\s([wids3portablevu]+)/i,                    // Nintendo/Playstation\n\n            // GNU/Linux based\n            /(mint)[\\/\\s\\(]?(\\w+)*/i,                                           // Mint\n            /(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk)[\\/\\s-]?([\\w\\.-]+)*/i,\n                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware\n                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk\n            /(hurd|linux)\\s?([\\w\\.]+)*/i,                                       // Hurd/Linux\n            /(gnu)\\s?([\\w\\.]+)*/i                                               // GNU\n            ], [NAME, VERSION], [\n\n            /(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i                                       // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Solaris\n            /(sunos)\\s?([\\w\\.]+\\d)*/i                                           // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n\n            // BSD based\n            /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?([\\w\\.]+)*/i                   // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly\n            ], [NAME, VERSION],[\n\n            /(ip[honead]+)(?:.*os\\s*([\\w]+)*\\slike\\smac|;\\sopera)/i             // iOS\n            ], [[NAME, 'iOS'], [VERSION, /_/g, '.']], [\n\n            /(mac\\sos\\sx)\\s?([\\w\\s\\.]+\\w)*/i                                    // Mac OS\n            ], [NAME, [VERSION, /_/g, '.']], [\n\n            // Other\n            /(haiku)\\s(\\w+)/i,                                                  // Haiku\n            /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.]*)*/i,                               // AIX\n            /(macintosh|mac(?=_powerpc)|plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos)/i,\n                                                                                // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS\n            /(unix)\\s?([\\w\\.]+)*/i                                              // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    var UAParser = function UAParser (uastring) {\n        if (!(this instanceof UAParser)) return new UAParser(uastring).getResult();\n\n        var ua = uastring || ((window && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(uastring).getResult();\n        }\n        this.getBrowser = function () {\n            return mapper.rgx.apply(this, regexes.browser);\n        };\n        this.getCPU = function () {\n            return mapper.rgx.apply(this, regexes.cpu);\n        };\n        this.getDevice = function () {\n            return mapper.rgx.apply(this, regexes.device);\n        };\n        this.getEngine = function () {\n            return mapper.rgx.apply(this, regexes.engine);\n        };\n        this.getOS = function () {\n            return mapper.rgx.apply(this, regexes.os);\n        };\n        this.getResult = function() {\n            return {\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return ua;\n        };\n        this.setUA = function (uastring) {\n            ua = uastring;\n            return this;\n        };\n        this.setUA(ua);\n    };\n\n    module.exports = UAParser;\n})(this);\n\n\n//# sourceURL=webpack:///./node_modules/user-agent-parser/src/ua-parser.js?");

/***/ })

}]);
